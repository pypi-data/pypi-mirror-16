Metadata-Version: 1.1
Name: Flask-Celery-py3
Version: 0.2.4
Summary: Celery 3.0+ integration for Flask (Python 3 version)
Home-page: https://github.com/taogeT/flask-celery
Author: Zheng Wentao
Author-email: zwtzjd@gmail.com
License: MIT
Description: =============================
        Flask Celery 3.0+ Integration
        =============================
        .. image:: https://img.shields.io/pypi/v/Flask-Celery-py3.svg
            :target: https://pypi.python.org/pypi/Flask-Celery-py3/
        .. image:: https://img.shields.io/pypi/dm/Flask-Celery-py3.svg
            :target: https://pypi.python.org/pypi/Flask-Celery-py3/
        .. image:: https://img.shields.io/pypi/l/Flask-Celery-py3.svg
            :target: https://pypi.python.org/pypi/Flask-Celery-py3
        .. image:: https://img.shields.io/pypi/pyversions/Flask-Celery-py3.svg
            :target: https://pypi.python.org/pypi/Flask-Celery-py3/
        .. image:: https://img.shields.io/pypi/status/Flask-Celery-py3.svg
            :target: https://pypi.python.org/pypi/Flask-Celery-py3/
        
        Celery: http://celeryproject.org
        
        Using Flask-Celery
        ==================
        
        You can easily add Celery to your flask application like this:
        
        ``app.py``::
        
            from flask_celery import Celery
        
            celery = Celery()
        
            def create_app():
                app = Flask(__name__)
        
                celery.init_app(app)
        
                return app
        
            @celery.task
            def add(x, y):
                return x + y
        
        To start the worker you can then launch the ``celery worker`` command
        by pointing to your ``celery`` app instance::
        
            $ celery -A app:celery worker -l info
        
        If your flask application has complex condition, you can refer to the example https://github.com/taogeT/flask-celery .
        
Platform: any
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Web Environment
Classifier: Framework :: Flask
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
Classifier: Topic :: Software Development :: Libraries :: Python Modules
