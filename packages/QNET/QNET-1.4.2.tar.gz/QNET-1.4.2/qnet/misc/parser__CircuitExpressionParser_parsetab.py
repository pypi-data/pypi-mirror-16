
# parser__CircuitExpressionParser_parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'E6CDE73BE13AF1D16AF0CA3EA971BAA1'
    
_lr_action_items = {'LPAREN':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,22,24,25,31,34,35,36,37,38,39,40,41,43,53,54,],[12,12,-9,18,-11,-7,-5,-6,-10,-2,19,20,12,12,23,-4,-8,12,-1,12,12,-12,-16,-15,-18,-17,45,-13,-14,-20,-22,-21,-19,]),'LBRACKET':([0,1,2,4,5,6,7,8,9,12,13,15,16,20,22,24,25,31,34,35,36,37,39,40,41,43,53,54,],[1,1,-9,-11,-7,-5,-6,-10,-2,1,1,-4,-8,1,-1,1,1,-12,-16,-15,-18,-17,-13,-14,-20,-22,-21,-19,]),'PSIGMA':([0,1,2,4,5,6,7,8,9,12,13,15,16,20,22,24,25,31,34,35,36,37,39,40,41,43,53,54,],[14,14,-9,-11,-7,-5,-6,-10,-2,14,14,-4,-8,14,-1,14,14,-12,-16,-15,-18,-17,-13,-14,-20,-22,-21,-19,]),'RPAREN':([2,4,5,6,7,8,15,16,21,27,28,29,30,31,32,33,34,35,36,37,39,40,41,43,47,51,52,53,54,],[-9,-11,-7,-5,-6,-10,-4,-8,31,39,-25,40,41,-12,-24,43,-16,-15,-18,-17,-13,-14,-20,-22,-23,53,54,-21,-19,]),'CID':([0,1,2,4,5,6,7,8,9,12,13,15,16,20,22,24,25,31,34,35,36,37,39,40,41,43,53,54,],[3,3,-9,-11,-7,-5,-6,-10,-2,3,3,-4,-8,3,-1,3,3,-12,-16,-15,-18,-17,-13,-14,-20,-22,-21,-19,]),'$end':([0,2,4,5,6,7,8,9,13,15,16,22,31,34,35,36,37,39,40,41,43,53,54,],[-3,-9,-11,-7,-5,-6,-10,-2,0,-4,-8,-1,-12,-16,-15,-18,-17,-13,-14,-20,-22,-21,-19,]),'COMMA':([2,4,5,6,7,8,15,16,28,30,31,32,33,34,35,36,37,39,40,41,43,46,47,53,54,],[-9,-11,-7,-5,-6,-10,-4,-8,-25,42,-12,-24,44,-16,-15,-18,-17,-13,-14,-20,-22,49,-23,-21,-19,]),'ICONST':([18,19,23,42,44,45,49,50,],[27,28,28,28,28,28,28,28,]),'LSERIES':([2,4,5,8,15,16,31,37,39,40,41,43,53,54,],[-9,-11,-7,-10,25,-8,-12,25,-13,-14,-20,-22,-21,-19,]),'PLUS':([2,4,5,8,15,16,31,35,39,40,41,43,53,54,],[-9,-11,-7,-10,24,-8,-12,24,-13,-14,-20,-22,-21,-19,]),'UNDER':([26,],[38,]),'RBRACKET':([2,4,5,6,7,8,15,16,17,31,34,35,36,37,39,40,41,43,53,54,],[-9,-11,-7,-5,-6,-10,-4,-8,26,-12,-16,-15,-18,-17,-13,-14,-20,-22,-21,-19,]),'ID':([0,1,2,4,5,6,7,8,9,12,13,15,16,20,22,24,25,31,34,35,36,37,39,40,41,43,53,54,],[10,10,-9,-11,-7,-5,-6,-10,-2,10,10,-4,-8,10,-1,10,10,-12,-16,-15,-18,-17,-13,-14,-20,-22,-21,-19,]),'RARROW':([28,48,],[-25,50,]),'FB':([0,1,2,4,5,6,7,8,9,12,13,15,16,20,22,24,25,31,34,35,36,37,39,40,41,43,53,54,],[11,11,-9,-11,-7,-5,-6,-10,-2,11,11,-4,-8,11,-1,11,11,-12,-16,-15,-18,-17,-13,-14,-20,-22,-21,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression_list':([0,],[13,]),'closed_expression':([0,1,12,13,20,24,25,],[15,15,15,15,15,35,37,]),'circuit_identity':([0,1,12,13,20,24,25,],[16,16,16,16,16,16,16,]),'circuit_permutation':([0,1,12,13,20,24,25,],[4,4,4,4,4,4,4,]),'circuit_symbol':([0,1,12,13,20,24,25,],[2,2,2,2,2,2,2,]),'bracketed_circuit_expression':([0,1,12,13,20,24,25,],[5,5,5,5,5,5,5,]),'int':([19,23,42,44,45,49,50,],[29,32,46,47,48,51,52,]),'circuit_concatenation':([0,1,12,13,20,24,],[6,6,6,6,6,34,]),'circuit_series':([0,1,12,13,20,25,],[7,7,7,7,7,36,]),'circuit_feedback':([0,1,12,13,20,24,25,],[8,8,8,8,8,8,8,]),'circuit_expression':([0,1,12,13,20,],[9,17,21,22,30,]),'int_list':([23,],[33,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression_list","S'",1,None,None,None),
  ('expression_list -> expression_list circuit_expression','expression_list',2,'p_expression_list','parse_circuit_strings.py',154),
  ('expression_list -> circuit_expression','expression_list',1,'p_expression_list','parse_circuit_strings.py',155),
  ('expression_list -> <empty>','expression_list',0,'p_expression_list','parse_circuit_strings.py',156),
  ('circuit_expression -> closed_expression','circuit_expression',1,'p_circuit_expression','parse_circuit_strings.py',168),
  ('circuit_expression -> circuit_concatenation','circuit_expression',1,'p_circuit_expression','parse_circuit_strings.py',169),
  ('circuit_expression -> circuit_series','circuit_expression',1,'p_circuit_expression','parse_circuit_strings.py',170),
  ('closed_expression -> bracketed_circuit_expression','closed_expression',1,'p_closed_expression','parse_circuit_strings.py',176),
  ('closed_expression -> circuit_identity','closed_expression',1,'p_closed_expression','parse_circuit_strings.py',177),
  ('closed_expression -> circuit_symbol','closed_expression',1,'p_closed_expression','parse_circuit_strings.py',178),
  ('closed_expression -> circuit_feedback','closed_expression',1,'p_closed_expression','parse_circuit_strings.py',179),
  ('closed_expression -> circuit_permutation','closed_expression',1,'p_closed_expression','parse_circuit_strings.py',180),
  ('bracketed_circuit_expression -> LPAREN circuit_expression RPAREN','bracketed_circuit_expression',3,'p_bracketed_circuit_expression','parse_circuit_strings.py',186),
  ('circuit_identity -> CID LPAREN ICONST RPAREN','circuit_identity',4,'p_circuit_identity','parse_circuit_strings.py',192),
  ('circuit_symbol -> ID LPAREN int RPAREN','circuit_symbol',4,'p_circuit_symbol','parse_circuit_strings.py',198),
  ('circuit_concatenation -> closed_expression PLUS closed_expression','circuit_concatenation',3,'p_circuit_concatenation_1','parse_circuit_strings.py',204),
  ('circuit_concatenation -> closed_expression PLUS circuit_concatenation','circuit_concatenation',3,'p_circuit_concatenation_2','parse_circuit_strings.py',210),
  ('circuit_series -> closed_expression LSERIES closed_expression','circuit_series',3,'p_circuit_series_1','parse_circuit_strings.py',217),
  ('circuit_series -> closed_expression LSERIES circuit_series','circuit_series',3,'p_circuit_series_2','parse_circuit_strings.py',223),
  ('circuit_feedback -> LBRACKET circuit_expression RBRACKET UNDER LPAREN int RARROW int RPAREN','circuit_feedback',9,'p_circuit_feedback_1','parse_circuit_strings.py',230),
  ('circuit_feedback -> FB LPAREN circuit_expression RPAREN','circuit_feedback',4,'p_circuit_feedback_2','parse_circuit_strings.py',237),
  ('circuit_feedback -> FB LPAREN circuit_expression COMMA int COMMA int RPAREN','circuit_feedback',8,'p_circuit_feedback_2','parse_circuit_strings.py',238),
  ('circuit_permutation -> PSIGMA LPAREN int_list RPAREN','circuit_permutation',4,'p_circuit_permutation','parse_circuit_strings.py',247),
  ('int_list -> int_list COMMA int','int_list',3,'p_int_list','parse_circuit_strings.py',254),
  ('int_list -> int','int_list',1,'p_int_list','parse_circuit_strings.py',255),
  ('int -> ICONST','int',1,'p_int','parse_circuit_strings.py',264),
]
