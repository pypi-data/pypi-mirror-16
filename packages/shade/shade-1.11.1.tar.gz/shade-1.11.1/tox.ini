[tox]
minversion = 1.6
envlist = py34,py27,pypy,pep8
skipsdist = True

[testenv]
usedevelop = True
install_command = pip install -U {opts} {packages}
setenv =
   VIRTUAL_ENV={envdir}
   LANG=en_US.UTF-8
   LANGUAGE=en_US:en
   LC_ALL=C
deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
commands = python setup.py testr --slowest --testr-args='{posargs}'

[testenv:record]
usedevelop = True
install_command = pip install -U {opts} {packages}
setenv =
   VIRTUAL_ENV={envdir}
   LANG=en_US.UTF-8
   LANGUAGE=en_US:en
   LC_ALL=C
   BETAMAX_RECORD_FIXTURES=1
passenv = SHADE_OS_CLOUD
deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
commands = python setup.py testr --slowest --testr-args='--concurrency=1 {posargs}'

[testenv:functional]
setenv =
   OS_TEST_PATH = ./shade/tests/functional
passenv = OS_*
commands = python setup.py testr --slowest --testr-args='--concurrency=1 {posargs}'

[testenv:pep8]
commands = flake8

[testenv:venv]
commands = {posargs}

[testenv:cover]
commands = python setup.py testr --coverage --testr-args='{posargs}'

[testenv:ansible]
# Need to pass some env vars for the Ansible playbooks
passenv = HOME USER
commands = {toxinidir}/extras/run-ansible-tests.sh -e {envdir} {posargs}

[testenv:docs]
commands = python setup.py build_sphinx

[flake8]
# Infra does not follow hacking, nor the broken E12* things
ignore = E123,E125,E129,H
show-source = True
builtins = _
exclude=.venv,.git,.tox,dist,doc,*lib/python*,*egg,build
