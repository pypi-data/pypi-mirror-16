Metadata-Version: 1.1
Name: overpass
Version: 0.5.4
Summary: Python wrapper for the OpenStreetMap Overpass API
Home-page: https://github.com/mvexel/overpass-api-python-wrapper
Author: Martijn van Exel
Author-email: m@rtijn.org
License: Apache
Description: Overpass API python wrapper
        ===========================
        
        This is a thin wrapper around the OpenStreetMap `Overpass
        API <http://wiki.openstreetmap.org/wiki/Overpass_API%3E>`__.
        
        |Build Status|
        
        Install it
        ==========
        
        ``pip install overpass``
        
        Usage
        -----
        
        Simplest example:
        
        .. code:: python
        
            import overpass
            api = overpass.API()
            response = api.Get('node["name"="Salt Lake City"]')
        
        Note that you don't have to include any of the output meta statements.
        The wrapper will, well, wrap those.
        
        You will get your result as a dictionary, which represents the JSON
        output you would get `from the Overpass API
        directly <http://overpass-api.de/output_formats.html#json%3E>`__. So you
        could do this for example:
        
        ``python print [(feature['tags']['name'], feature['id']) for feature in response['elements']] [(u'Salt Lake City', 150935219), (u'Salt Lake City', 585370637), (u'Salt Lake City', 1615721573)]``
        
        You can specify the format of the response. By default, you will get
        GeoJSON using the ``responseformat`` parameter. Alternatives are plain
        JSON (``json``) and OSM XML (``xml``), as ouput directly by the Overpass
        API.
        
        .. code:: python
        
            response = api.Get('node["name"="Salt Lake City"]', responseformat="xml")
        
        Parameters
        ~~~~~~~~~~
        
        The API object takes a few parameters:
        
        endpoint
        ^^^^^^^^
        
        The default endpoint is ``http://overpass-api.de/api/interpreter`` but
        you can pass in another instance:
        
        .. code:: python
        
            api = overpass.API(endpoint=http://overpass.myserver/interpreter)
        
        timeout
        ^^^^^^^
        
        The default timeout is 25 seconds, but you can set it to whatever you
        want.
        
        .. code:: python
        
            api = overpass.API(timeout=600)
        
        debug
        ^^^^^
        
        Setting this to ``True`` will get you debug output.
        
        Simple queries
        ~~~~~~~~~~~~~~
        
        In addition to just send your query and parse the result, the wrapper
        provides shortcuts for often used map queries. To use them, just pass
        them like to normal query to the API.
        
        MapQuery
        ^^^^^^^^
        
        This is a shorthand for a
        ``complete ways and relations <http://wiki.openstreetmap.org/wiki/Overpass_API/Language_Guide#Completed_ways_and_relations>``\ \_\_
        query in a bounding box (the 'map call'). You just pass the bounding box
        to the constructor:
        
        ``python map_query = overpass.MapQuery(50.746,7.154,50.748,7.157) response = api.Get(map_query)``
        
        WayQuery
        ^^^^^^^^
        
        This is shorthand for getting a set of ways and their child nodes that
        satisfy certain criteria. Pass the criteria as a Overpass QL stub to the
        constructor:
        
        ``python way_query = overpass.WayQuery('[name="Highway 51"]') response = api.Get(way_query)``
        
        Testing
        -------
        
        Using ``nose``.
        
        ``py.test``
        
        FAQ
        ---
        
        I need help or have an idea for a feature
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        
        Create a `new
        issue <https://github.com/mvexel/overpass-api-python-wrapper/issues%3E>`__.
        
        Where did the CLI tool go?
        ~~~~~~~~~~~~~~~~~~~~~~~~~~
        
        I decided that it does not belong in this repo. If you still want it,
        get version 0.4.0 or below.
        
        .. |Build Status| image:: https://travis-ci.org/mvexel/overpass-api-python-wrapper.svg?branch=master
           :target: https://travis-ci.org/mvexel/overpass-api-python-wrapper
        
Keywords: openstreetmap,overpass,wrapper
Platform: UNKNOWN
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Topic :: Scientific/Engineering :: GIS
Classifier: Topic :: Utilities
