Backup
------

A complete {{ FLOOR_PROJECT_NAME }} installation is made a different kinds of files:

    * the code of your application and its dependencies (you should not have to backup them),
    * static files (as they are provided by the code, you can lost them),
    * configuration files (you can easily recreate it, or you must backup it),
    * database content (you must backup it),
    * user-created files (you must also backup them).

Many backup strategies exist, and you must choose one that fits your needs. We can only propose general-purpose strategies.

{% block backup_db %}We use logrotate to backup the database, with a new file each day.

.. code-block:: bash

  sudo mkdir -p /var/backups/{{ PROJECT_NAME }}
  sudo chown -r {{ PROJECT_NAME }}: /var/backups/{{ PROJECT_NAME }}
  sudo -u {{ PROJECT_NAME }} -i
  cat << EOF > {{ DF_PATH_ETC }}/{{ PROJECT_NAME }}/backup_db.conf
  /var/backups/{{ PROJECT_NAME }}/backup_db.sql.gz {
    daily
    rotate 20
    nocompress
    missingok
    create 640 {{ PROJECT_NAME }} {{ PROJECT_NAME }}
    postrotate
    myproject-manage dumpdb | gzip > /var/backups/{{ PROJECT_NAME }}/backup_db.sql.gz
    endscript
  }
  EOF
  touch /var/backups/{{ PROJECT_NAME }}/backup_db.sql.gz
  crontab -e
  MAILTO={{ ADMIN_EMAIL }}
  0 1 * * * {{ DF_PATH_BIN }}/{{ PROJECT_NAME }}-manage clearsessions
  0 2 * * * logrotate -f {{ DF_PATH_ETC }}/{{ PROJECT_NAME }}/backup_db.conf
{% endblock %}

{% block backup_media %}Backup of the user-created files can be done with rsync, with a full backup each month:
If you have a lot of files to backup, beware of the available disk place!

.. code-block:: bash

  sudo mkdir -p /var/backups/{{ PROJECT_NAME }}/media
  sudo chown -r {{ PROJECT_NAME }}: /var/backups/{{ PROJECT_NAME }}
  cat << EOF > {{ DF_PATH_ETC }}/{{ PROJECT_NAME }}/backup_media.conf
  /var/backups/{{ PROJECT_NAME }}/backup_media.tar.gz {
    monthly
    rotate 6
    nocompress
    missingok
    create 640 {{ PROJECT_NAME }} {{ PROJECT_NAME }}
    postrotate
    tar -C /var/backups/{{ PROJECT_NAME }}/media/ -czf /var/backups/{{ PROJECT_NAME }}/backup_media.tar.gz .
    endscript
  }
  EOF
  touch /var/backups/{{ PROJECT_NAME }}/backup_media.tar.gz
  crontab -e
  MAILTO={{ ADMIN_EMAIL }}
  0 3 * * * rsync -arltDE {{ MEDIA_ROOT }}/ /var/backups/{{ PROJECT_NAME }}/media/
  0 5 0 * * logrotate -f {{ DF_PATH_ETC }}/{{ PROJECT_NAME }}/backup_media.conf

Restoring a backup
~~~~~~~~~~~~~~~~~~

.. code-block:: bash

  cat /var/backups/{{ PROJECT_NAME }}/backup_db.sql.gz | gunzip | {{ DF_PATH_BIN }}/{{ PROJECT_NAME }}-manage dbshell
  tar -C {{ MEDIA_ROOT }}/ -xf /var/backups/{{ PROJECT_NAME }}/backup_media.tar.gz

{% endblock %}
