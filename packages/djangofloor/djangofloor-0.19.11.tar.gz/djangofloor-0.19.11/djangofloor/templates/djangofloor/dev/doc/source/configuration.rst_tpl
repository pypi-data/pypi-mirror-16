{% load djangofloor %}
Complete configuration
======================


Configuration options
---------------------

You can look current settings with the following command:

.. code-block:: bash

    {{ PROJECT_NAME }}-manage config

Here is the complete list of settings:

.. code-block:: ini

{% block ini_configuration %}{% for section in settings_merger.all_ini_options.items %}  [{{ section.0 }}]
{% for option_parser in section.1 %}  {{ option_parser.key }} = {{ option_parser.str_value|df_inivalue }}
{% if option_parser.help_str %}  # {{ option_parser.help_str|safe }}
{% endif %}{% endfor %}{% endfor %}
{% endblock %}

If you need more complex settings, you can override default values (given in `djangofloor.defaults` and
`{{ PROJECT_NAME }}.defaults`) by creating a file named `{{ path_etc_virtualenv }}/{{ PROJECT_NAME }}/settings.py`.


{% block debugging %}
Debugging
---------

If something does not work as expected, you can look at logs (in /var/log/supervisor if you use supervisor)
or try to run the server interactively:

.. code-block:: bash

  sudo service supervisor stop
  sudo -u {{ PROJECT_NAME }} -i
  workon {{ PROJECT_NAME }}
  {{ PROJECT_NAME }}-manage config
  {{ PROJECT_NAME }}-manage runserver
  {{ PROJECT_NAME }}-gunicorn
{% if USE_CELERY %}  {{ PROJECT_NAME }}-celery worker
{% endif %}

{% endblock %}
{% block backup %}
{% with DF_PATH_BIN=path_bin_virtualenv DF_PATH_ETC=path_etc_virtualenv %}{% include 'djangofloor/include/backup.rst_tpl' %}{% endwith %}
{% endblock %}
{% block monitoring %}
{% with DF_PATH_BIN=path_bin_virtualenv DF_PATH_ETC=path_etc_virtualenv %}{% include 'djangofloor/include/monitoring.rst_tpl' %}{% endwith %}
{% endblock %}
{% block ldap_groups %}
LDAP groups
-----------

There are two possibilities to use LDAP groups, with their own pros and cons:

  * on each request, use an extra LDAP connection to retrieve groups instead of looking in the SQL database,
  * regularly synchronize groups between the LDAP server and the SQL servers.

The second approach can be used without any modification in your code and remove a point of failure
in the global architecture (if you allow some delay during the synchronization process).
A tool exists for such synchronization: `MultiSync <https://github.com/d9pouces/Multisync>`_.
{% endblock %}