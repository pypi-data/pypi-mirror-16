
# bdd_parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '2FD0E96F3542EA825A0EADEAF6730584'
    
_lr_action_items = {'RENAME':([0,7,13,22,23,24,25,26,27,28,29,30,33,36,37,54,56,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'NEQUALS':([2,3,8,9,10,11,17,21,31,38,39,40,41,42,43,44,45,46,47,49,52,53,55,57,58,],[-3,-1,-24,-2,-5,24,-4,24,-6,-25,24,24,-13,-12,24,24,24,24,24,24,24,24,24,24,-15,]),'NUMBER':([0,4,7,13,22,23,24,25,26,27,28,29,30,33,36,37,54,56,],[2,17,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'DIV':([8,15,],[-24,34,]),'TRUE':([0,7,13,22,23,24,25,26,27,28,29,30,33,36,37,54,56,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'MINUS':([0,2,3,7,8,9,10,11,13,17,21,22,23,24,25,26,27,28,29,30,31,33,36,37,38,39,40,41,42,43,44,45,46,47,49,52,53,54,55,56,57,58,],[4,-3,-1,4,-24,-2,-5,26,4,-4,26,4,4,4,4,4,4,4,4,4,-6,4,4,4,-25,-7,-9,-13,-12,-14,26,26,-8,26,26,26,26,4,26,4,26,-15,]),'RPAREN':([2,3,8,9,10,17,21,31,38,39,40,41,42,43,44,45,46,49,52,53,57,58,],[-3,-1,-24,-2,-5,-4,38,-6,-25,-7,-9,-13,-12,-14,-10,-11,-8,-18,-17,-16,58,-15,]),'COLON':([8,14,16,18,19,20,48,50,51,],[-24,33,-20,-23,36,37,-19,-21,-22,]),'FORALL':([0,7,13,22,23,24,25,26,27,28,29,30,33,36,37,54,56,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'BIMP':([2,3,8,9,10,11,17,21,31,38,39,40,41,42,43,44,45,46,47,49,52,53,55,57,58,],[-3,-1,-24,-2,-5,28,-4,28,-6,-25,-7,-9,-13,-12,-14,-10,-11,-8,28,28,28,28,28,28,-15,]),'$end':([2,3,8,9,10,11,17,31,38,39,40,41,42,43,44,45,46,49,52,53,58,],[-3,-1,-24,-2,-5,0,-4,-6,-25,-7,-9,-13,-12,-14,-10,-11,-8,-18,-17,-16,-15,]),'XOR':([2,3,8,9,10,11,17,21,31,38,39,40,41,42,43,44,45,46,47,49,52,53,55,57,58,],[-3,-1,-24,-2,-5,23,-4,23,-6,-25,-7,-9,-13,-12,23,23,23,-8,23,23,23,23,23,23,-15,]),'EXISTS':([0,7,13,22,23,24,25,26,27,28,29,30,33,36,37,54,56,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'EQUALS':([2,3,8,9,10,11,17,21,31,38,39,40,41,42,43,44,45,46,47,49,52,53,55,57,58,],[-3,-1,-24,-2,-5,25,-4,25,-6,-25,25,25,-13,-12,25,25,25,25,25,25,25,25,25,25,-15,]),'IMP':([2,3,8,9,10,11,17,21,31,38,39,40,41,42,43,44,45,46,47,49,52,53,55,57,58,],[-3,-1,-24,-2,-5,27,-4,27,-6,-25,-7,-9,-13,-12,-14,-10,27,-8,27,27,27,27,27,27,-15,]),'LPAREN':([0,7,12,13,22,23,24,25,26,27,28,29,30,33,36,37,54,56,],[7,7,30,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'AND':([2,3,8,9,10,11,17,21,31,38,39,40,41,42,43,44,45,46,47,49,52,53,55,57,58,],[-3,-1,-24,-2,-5,22,-4,22,-6,-25,-7,22,-13,-12,22,22,22,22,22,22,22,22,22,22,-15,]),'FALSE':([0,7,13,22,23,24,25,26,27,28,29,30,33,36,37,54,56,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'NAME':([0,1,5,6,7,13,22,23,24,25,26,27,28,29,30,32,33,34,35,36,37,54,56,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'ITE':([0,7,13,22,23,24,25,26,27,28,29,30,33,36,37,54,56,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'NOT':([0,7,13,22,23,24,25,26,27,28,29,30,33,36,37,54,56,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'COMMA':([2,3,8,9,10,14,16,17,18,19,20,31,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,58,],[-3,-1,-24,-2,-5,32,-20,-4,-23,35,35,-6,-25,-7,-9,-13,-12,-14,-10,-11,-8,54,-19,-18,-21,-22,-17,-16,56,-15,]),'OR':([2,3,8,9,10,11,17,21,31,38,39,40,41,42,43,44,45,46,47,49,52,53,55,57,58,],[-3,-1,-24,-2,-5,29,-4,29,-6,-25,-7,29,-13,-12,29,29,29,-8,29,29,29,29,29,29,-15,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expr':([0,7,13,22,23,24,25,26,27,28,29,30,33,36,37,54,56,],[11,21,31,39,40,41,42,43,44,45,46,47,49,52,53,55,57,]),'names':([5,6,],[19,20,]),'subs':([1,],[14,]),'name':([0,1,5,6,7,13,22,23,24,25,26,27,28,29,30,32,33,34,35,36,37,54,56,],[10,15,18,18,10,10,10,10,10,10,10,10,10,10,10,15,10,50,51,10,10,10,10,]),'sub':([1,32,],[16,48,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expr","S'",1,None,None,None),
  ('expr -> TRUE','expr',1,'p_bool','_parser.py',84),
  ('expr -> FALSE','expr',1,'p_bool','_parser.py',85),
  ('expr -> NUMBER','expr',1,'p_number','_parser.py',90),
  ('expr -> MINUS NUMBER','expr',2,'p_negative_number','_parser.py',94),
  ('expr -> name','expr',1,'p_var','_parser.py',99),
  ('expr -> NOT expr','expr',2,'p_unary','_parser.py',103),
  ('expr -> expr AND expr','expr',3,'p_binary','_parser.py',107),
  ('expr -> expr OR expr','expr',3,'p_binary','_parser.py',108),
  ('expr -> expr XOR expr','expr',3,'p_binary','_parser.py',109),
  ('expr -> expr IMP expr','expr',3,'p_binary','_parser.py',110),
  ('expr -> expr BIMP expr','expr',3,'p_binary','_parser.py',111),
  ('expr -> expr EQUALS expr','expr',3,'p_binary','_parser.py',112),
  ('expr -> expr NEQUALS expr','expr',3,'p_binary','_parser.py',113),
  ('expr -> expr MINUS expr','expr',3,'p_binary','_parser.py',114),
  ('expr -> ITE LPAREN expr COMMA expr COMMA expr RPAREN','expr',8,'p_ternary_conditional','_parser.py',119),
  ('expr -> EXISTS names COLON expr','expr',4,'p_quantifier','_parser.py',123),
  ('expr -> FORALL names COLON expr','expr',4,'p_quantifier','_parser.py',124),
  ('expr -> RENAME subs COLON expr','expr',4,'p_rename','_parser.py',129),
  ('subs -> subs COMMA sub','subs',3,'p_substitutions_iter','_parser.py',133),
  ('subs -> sub','subs',1,'p_substitutions_end','_parser.py',139),
  ('sub -> name DIV name','sub',3,'p_substitution','_parser.py',143),
  ('names -> names COMMA name','names',3,'p_names_iter','_parser.py',149),
  ('names -> name','names',1,'p_names_end','_parser.py',155),
  ('name -> NAME','name',1,'p_name','_parser.py',159),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_paren','_parser.py',163),
]
