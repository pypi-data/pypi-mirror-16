
# ltl_parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '782910CF9C392524E105A2A24049D020'
    
_lr_action_items = {'TRUNCATE':([1,2,7,9,10,11,14,16,17,18,28,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,67,68,],[-30,-1,-31,-2,-29,20,-32,-6,-5,20,-7,-4,-3,-33,-28,20,-23,-18,-25,-27,-20,-19,-26,-12,-21,-10,-17,-24,-11,-22,-15,-13,-14,-8,-9,20,20,-16,]),'NEQUALS':([1,2,7,9,10,11,14,16,17,18,28,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,67,68,],[-30,-1,-31,-2,-29,21,-32,-6,21,21,-7,21,-3,-33,-28,21,-23,-18,-25,-27,-20,-19,-26,21,-21,21,-17,-24,21,-22,21,21,21,21,21,21,21,-16,]),'NUMBER':([0,3,5,6,8,12,13,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,64,66,],[7,14,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'DIV':([1,2,7,9,10,11,14,16,17,18,28,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,67,68,],[-30,-1,-31,-2,-29,22,-32,-6,22,22,-7,22,-3,-33,-28,22,-23,22,-25,22,22,22,22,22,22,22,22,-24,22,22,22,22,22,22,22,22,22,-16,]),'TRUE':([0,5,6,8,12,13,19,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,64,66,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'MINUS':([0,1,2,5,6,7,8,9,10,11,12,13,14,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,],[3,-30,-1,3,3,-31,3,-2,-29,23,3,3,-32,-6,23,23,3,3,3,3,3,3,3,3,-7,3,3,3,3,3,3,3,3,3,3,3,23,-3,-33,-28,23,-23,23,-25,-27,23,23,-26,23,23,23,23,-24,23,23,23,23,23,23,23,3,23,3,23,-16,]),'LE':([1,2,7,9,10,11,14,16,17,18,28,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,67,68,],[-30,-1,-31,-2,-29,24,-32,-6,24,24,-7,24,-3,-33,-28,24,-23,24,-25,-27,-20,-19,-26,24,-21,24,24,-24,24,-22,24,24,24,24,24,24,24,-16,]),'RPAREN':([1,2,7,9,10,14,16,17,18,28,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,67,68,],[-30,-1,-31,-2,-29,-32,-6,-5,43,-7,-4,-3,-33,-28,-23,-18,-25,-27,-20,-19,-26,-12,-21,-10,-17,-24,-11,-22,-15,-13,-14,-8,-9,68,-16,]),'DQUOTES':([0,5,6,8,12,13,15,19,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,64,66,],[4,4,4,4,4,4,42,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'NEXT':([0,5,6,8,12,13,19,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,64,66,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'LT':([1,2,7,9,10,11,14,16,17,18,28,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,67,68,],[-30,-1,-31,-2,-29,25,-32,-6,25,25,-7,25,-3,-33,-28,25,-23,25,-25,-27,-20,-19,-26,25,-21,25,25,-24,25,-22,25,25,25,25,25,25,25,-16,]),'PLUS':([1,2,7,9,10,11,14,16,17,18,28,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,67,68,],[-30,-1,-31,-2,-29,26,-32,-6,26,26,-7,26,-3,-33,-28,26,-23,26,-25,-27,26,26,-26,26,26,26,26,-24,26,26,26,26,26,26,26,26,26,-16,]),'BIMP':([1,2,7,9,10,11,14,16,17,18,28,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,67,68,],[-30,-1,-31,-2,-29,27,-32,-6,-5,27,-7,-4,-3,-33,-28,27,-23,-18,-25,-27,-20,-19,-26,-12,-21,-10,-17,-24,-11,-22,-15,-13,-14,-8,-9,27,27,-16,]),'$end':([1,2,7,9,10,11,14,16,17,28,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,68,],[-30,-1,-31,-2,-29,0,-32,-6,-5,-7,-4,-3,-33,-28,-23,-18,-25,-27,-20,-19,-26,-12,-21,-10,-17,-24,-11,-22,-15,-13,-14,-8,-9,-16,]),'PRIME':([1,2,7,9,10,11,14,16,17,18,28,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,67,68,],[-30,-1,-31,-2,-29,28,-32,28,28,28,-7,28,28,-33,-28,28,-23,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-16,]),'EVENTUALLY':([0,5,6,8,12,13,19,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,64,66,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'GT':([1,2,7,9,10,11,14,16,17,18,28,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,67,68,],[-30,-1,-31,-2,-29,29,-32,-6,29,29,-7,29,-3,-33,-28,29,-23,29,-25,-27,-20,-19,-26,29,-21,29,29,-24,29,-22,29,29,29,29,29,29,29,-16,]),'XOR':([1,2,7,9,10,11,14,16,17,18,28,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,67,68,],[-30,-1,-31,-2,-29,30,-32,-6,-5,30,-7,-4,-3,-33,-28,30,-23,-18,-25,-27,-20,-19,-26,30,-21,-10,-17,-24,30,-22,-15,-13,-14,-8,-9,30,30,-16,]),'EQUALS':([1,2,7,9,10,11,14,16,17,18,28,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,67,68,],[-30,-1,-31,-2,-29,31,-32,-6,31,31,-7,31,-3,-33,-28,31,-23,-18,-25,-27,-20,-19,-26,31,-21,31,-17,-24,31,-22,31,31,31,31,31,31,31,-16,]),'TIMES':([1,2,7,9,10,11,14,16,17,18,28,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,67,68,],[-30,-1,-31,-2,-29,32,-32,-6,32,32,-7,32,-3,-33,-28,32,-23,32,-25,32,32,32,32,32,32,32,32,-24,32,32,32,32,32,32,32,32,32,-16,]),'IMP':([1,2,7,9,10,11,14,16,17,18,28,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,67,68,],[-30,-1,-31,-2,-29,33,-32,-6,-5,33,-7,-4,-3,-33,-28,33,-23,-18,-25,-27,-20,-19,-26,33,-21,-10,-17,-24,-11,-22,-15,-13,-14,-8,-9,33,33,-16,]),'GE':([1,2,7,9,10,11,14,16,17,18,28,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,67,68,],[-30,-1,-31,-2,-29,34,-32,-6,34,34,-7,34,-3,-33,-28,34,-23,34,-25,-27,-20,-19,-26,34,-21,34,34,-24,34,-22,34,34,34,34,34,34,34,-16,]),'LPAREN':([0,5,6,8,12,13,19,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,64,66,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'RELEASE':([1,2,7,9,10,11,14,16,17,18,28,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,67,68,],[-30,-1,-31,-2,-29,35,-32,-6,35,35,-7,35,-3,-33,-28,35,-23,-18,-25,-27,-20,-19,-26,35,-21,35,-17,-24,35,-22,-15,-13,-14,35,35,35,35,-16,]),'UNTIL':([1,2,7,9,10,11,14,16,17,18,28,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,67,68,],[-30,-1,-31,-2,-29,36,-32,-6,36,36,-7,36,-3,-33,-28,36,-23,-18,-25,-27,-20,-19,-26,36,-21,36,-17,-24,36,-22,-15,-13,-14,36,36,36,36,-16,]),'WEAK_UNTIL':([1,2,7,9,10,11,14,16,17,18,28,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,67,68,],[-30,-1,-31,-2,-29,37,-32,-6,37,37,-7,37,-3,-33,-28,37,-23,-18,-25,-27,-20,-19,-26,37,-21,37,-17,-24,37,-22,-15,-13,-14,37,37,37,37,-16,]),'AND':([1,2,7,9,10,11,14,16,17,18,28,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,67,68,],[-30,-1,-31,-2,-29,38,-32,-6,-5,38,-7,-4,-3,-33,-28,38,-23,-18,-25,-27,-20,-19,-26,38,-21,38,-17,-24,38,-22,-15,-13,-14,-8,38,38,38,-16,]),'FALSE':([0,5,6,8,12,13,19,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,64,66,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'NAME':([0,4,5,6,8,12,13,19,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,64,66,],[10,15,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'ALWAYS':([0,5,6,8,12,13,19,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,64,66,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'ITE':([8,],[19,]),'NOT':([0,5,6,8,12,13,19,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,64,66,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'COMMA':([1,2,7,9,10,14,16,17,28,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,68,],[-30,-1,-31,-2,-29,-32,-6,-5,-7,-4,-3,-33,-28,64,-23,-18,-25,-27,-20,-19,-26,-12,-21,-10,-17,-24,-11,-22,-15,-13,-14,-8,-9,66,-16,]),'OR':([1,2,7,9,10,11,14,16,17,18,28,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,67,68,],[-30,-1,-31,-2,-29,39,-32,-6,-5,39,-7,-4,-3,-33,-28,39,-23,-18,-25,-27,-20,-19,-26,39,-21,39,-17,-24,39,-22,-15,-13,-14,-8,-9,39,39,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expr':([0,5,6,8,12,13,19,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,64,66,],[11,16,17,18,40,41,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,67,]),'number':([0,5,6,8,12,13,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,64,66,],[1,1,1,1,1,1,1,45,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expr","S'",1,None,None,None),
  ('expr -> TRUE','expr',1,'p_nullary_connective','lexyacc.py',244),
  ('expr -> FALSE','expr',1,'p_nullary_connective','lexyacc.py',245),
  ('expr -> NOT expr','expr',2,'p_unary_connective','lexyacc.py',250),
  ('expr -> ALWAYS expr','expr',2,'p_unary_connective','lexyacc.py',251),
  ('expr -> EVENTUALLY expr','expr',2,'p_unary_connective','lexyacc.py',252),
  ('expr -> NEXT expr','expr',2,'p_unary_connective','lexyacc.py',253),
  ('expr -> expr PRIME','expr',2,'p_postfix_next','lexyacc.py',259),
  ('expr -> expr AND expr','expr',3,'p_binary_connective','lexyacc.py',263),
  ('expr -> expr OR expr','expr',3,'p_binary_connective','lexyacc.py',264),
  ('expr -> expr XOR expr','expr',3,'p_binary_connective','lexyacc.py',265),
  ('expr -> expr IMP expr','expr',3,'p_binary_connective','lexyacc.py',266),
  ('expr -> expr BIMP expr','expr',3,'p_binary_connective','lexyacc.py',267),
  ('expr -> expr UNTIL expr','expr',3,'p_binary_connective','lexyacc.py',268),
  ('expr -> expr WEAK_UNTIL expr','expr',3,'p_binary_connective','lexyacc.py',269),
  ('expr -> expr RELEASE expr','expr',3,'p_binary_connective','lexyacc.py',270),
  ('expr -> LPAREN ITE expr COMMA expr COMMA expr RPAREN','expr',8,'p_ternary_conditional','lexyacc.py',276),
  ('expr -> expr EQUALS expr','expr',3,'p_binary_predicate','lexyacc.py',280),
  ('expr -> expr NEQUALS expr','expr',3,'p_binary_predicate','lexyacc.py',281),
  ('expr -> expr LT expr','expr',3,'p_binary_predicate','lexyacc.py',282),
  ('expr -> expr LE expr','expr',3,'p_binary_predicate','lexyacc.py',283),
  ('expr -> expr GT expr','expr',3,'p_binary_predicate','lexyacc.py',284),
  ('expr -> expr GE expr','expr',3,'p_binary_predicate','lexyacc.py',285),
  ('expr -> expr TRUNCATE number','expr',3,'p_truncator','lexyacc.py',290),
  ('expr -> expr TIMES expr','expr',3,'p_binary_function','lexyacc.py',294),
  ('expr -> expr DIV expr','expr',3,'p_binary_function','lexyacc.py',295),
  ('expr -> expr PLUS expr','expr',3,'p_binary_function','lexyacc.py',296),
  ('expr -> expr MINUS expr','expr',3,'p_binary_function','lexyacc.py',297),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_paren','lexyacc.py',302),
  ('expr -> NAME','expr',1,'p_var','lexyacc.py',306),
  ('expr -> number','expr',1,'p_number_expr','lexyacc.py',310),
  ('number -> NUMBER','number',1,'p_number','lexyacc.py',314),
  ('expr -> MINUS NUMBER','expr',2,'p_negative_number','lexyacc.py',318),
  ('expr -> DQUOTES NAME DQUOTES','expr',3,'p_string','lexyacc.py',322),
]
