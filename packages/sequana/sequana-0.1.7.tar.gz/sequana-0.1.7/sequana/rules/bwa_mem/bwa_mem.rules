"""Read mapping for either single end and paired end data using BWA and samtools.

input:
    fastq -> list with your fastq.gz (R1, R2)
    ref -> reference's fastq file
"""
__sequana__bwa_mem = [":samples", "output", ":kwargs", ":threads"]

import sequana.snaketools as sm
cfg = sm.SequanaConfig.from_dict(config)


rule bwa_mem:
    input:
        fastq = cfg.DATASET,
        reference = config["reference"]
    output:
        mem = "bwa_mem/%s.bam" % cfg.PROJECT,
        sort = "bwa_mem/%s.sorted.bam" % cfg.PROJECT,
        reference = "references/%s.fa" % cfg.PROJECT,
        done = touch("bwa_mem/done")
    log:
        mem = "logs/bwa_mem.logs",
        index = "logs/bwa_index.logs",
        sort = "logs/samtools_sort.logs"
    params:
        index = " ".join(["%s %s" % (key, value) for key, value in
            config["bwa_index"].items()]),
        mem = " ".join(["%s %s" % (key, value) for key, value in
            config["bwa_mem"]["args"].items()]),
        kwargs = config["bwa_mem"]["kwargs"],
    threads:
        config["bwa_mem"]["threads"]
    shell:
        """
        # Indexing
        ln -sf $(pwd)/{input.reference} {output.reference}
        bwa index {params.index} {output.reference} 2> {log.index}
        samtools faidx {output.reference}

        # Mapping
        (bwa mem {params.kwargs} -t {threads} {params.mem} \
        {output.reference} {input.fastq} | \
        samtools view -Sbh -> {output.mem}) 2> {log.mem}
 
        # Sorting
        samtools sort -o {output.sort} {output.mem} 2> {log.sort}
        samtools index {output.sort} 2>> {log.sort}
        """
