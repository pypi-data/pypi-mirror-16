"""Stub file for the '_operator' module."""
# This is an autogenerated file. It serves as a starting point
# for a more precise manual annotation of this module.
# Feel free to edit the source below, but remove this header when you do.

from typing import Any, List, Tuple, Dict, Generic

def _compare_digest(a, b) -> bool:
    raise BufferError()
    raise TypeError()

def abs(*args, **kwargs) -> Any: ...

def add(*args, **kwargs) -> Any: ...

def and_(*args, **kwargs) -> Any: ...

def concat(*args, **kwargs) -> Any: ...

def contains(*args, **kwargs) -> bool: ...

def countOf(*args, **kwargs) -> int: ...

def delitem(*args, **kwargs) -> None: ...

def eq(*args, **kwargs) -> Any: ...

def floordiv(*args, **kwargs) -> Any: ...

def ge(*args, **kwargs) -> Any: ...

def getitem(*args, **kwargs) -> Any: ...

def gt(*args, **kwargs) -> Any: ...

def iadd(*args, **kwargs) -> Any: ...

def iand(*args, **kwargs) -> Any: ...

def iconcat(*args, **kwargs) -> Any: ...

def ifloordiv(*args, **kwargs) -> Any: ...

def ilshift(*args, **kwargs) -> Any: ...

def imod(*args, **kwargs) -> Any: ...

def imul(*args, **kwargs) -> Any: ...

def index(*args, **kwargs) -> Any: ...

def indexOf(*args, **kwargs) -> int: ...

def inv(*args, **kwargs) -> Any: ...

def invert(*args, **kwargs) -> Any: ...

def ior(*args, **kwargs) -> Any: ...

def ipow(*args, **kwargs) -> Any: ...

def irshift(*args, **kwargs) -> Any: ...

def is_(*args, **kwargs) -> bool: ...

def is_not(*args, **kwargs) -> bool: ...

def isub(*args, **kwargs) -> Any: ...

def itruediv(*args, **kwargs) -> Any: ...

def ixor(*args, **kwargs) -> Any: ...

def le(*args, **kwargs) -> Any: ...

def length_hint(a, *args, **kwargs) -> int: ...

def lshift(*args, **kwargs) -> Any: ...

def lt(*args, **kwargs) -> Any: ...

def mod(*args, **kwargs) -> Any: ...

def mul(*args, **kwargs) -> Any: ...

def ne(*args, **kwargs) -> Any: ...

def neg(*args, **kwargs) -> Any: ...

def not_(*args, **kwargs) -> bool: ...

def or_(*args, **kwargs) -> Any: ...

def pos(*args, **kwargs) -> Any: ...

def pow(*args, **kwargs) -> Any: ...

def rshift(*args, **kwargs) -> Any: ...

def setitem(*args, **kwargs) -> None: ...

def sub(*args, **kwargs) -> Any: ...

def truediv(*args, **kwargs) -> Any: ...

def truth(*args, **kwargs) -> bool: ...

def xor(*args, **kwargs) -> Any: ...
