# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.10
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_pydart2_api')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_pydart2_api')
    _pydart2_api = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_pydart2_api', [dirname(__file__)])
        except ImportError:
            import _pydart2_api
            return _pydart2_api
        if fp is not None:
            try:
                _mod = imp.load_module('_pydart2_api', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _pydart2_api = swig_import_helper()
    del swig_import_helper
else:
    import _pydart2_api
del _swig_python_version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except __builtin__.Exception:
    class _object:
        pass
    _newclass = 0


def init(verbose=True):
    return _pydart2_api.init(verbose)
init = _pydart2_api.init

def destroy():
    return _pydart2_api.destroy()
destroy = _pydart2_api.destroy

def setVerbose(verbose=True):
    return _pydart2_api.setVerbose(verbose)
setVerbose = _pydart2_api.setVerbose

def getVerbose():
    return _pydart2_api.getVerbose()
getVerbose = _pydart2_api.getVerbose

def createWorld(timestep):
    return _pydart2_api.createWorld(timestep)
createWorld = _pydart2_api.createWorld

def createWorldFromSkel(path):
    return _pydart2_api.createWorldFromSkel(path)
createWorldFromSkel = _pydart2_api.createWorldFromSkel

def destroyWorld(wid):
    return _pydart2_api.destroyWorld(wid)
destroyWorld = _pydart2_api.destroyWorld

def world__addSkeleton(wid, path):
    return _pydart2_api.world__addSkeleton(wid, path)
world__addSkeleton = _pydart2_api.world__addSkeleton

def world__getNumSkeletons(wid):
    return _pydart2_api.world__getNumSkeletons(wid)
world__getNumSkeletons = _pydart2_api.world__getNumSkeletons

def world__reset(wid):
    return _pydart2_api.world__reset(wid)
world__reset = _pydart2_api.world__reset

def world__step(wid):
    return _pydart2_api.world__step(wid)
world__step = _pydart2_api.world__step

def world__render(wid):
    return _pydart2_api.world__render(wid)
world__render = _pydart2_api.world__render

def world__setTimeStep(wid, _timeStep):
    return _pydart2_api.world__setTimeStep(wid, _timeStep)
world__setTimeStep = _pydart2_api.world__setTimeStep

def world__getTimeStep(wid):
    return _pydart2_api.world__getTimeStep(wid)
world__getTimeStep = _pydart2_api.world__getTimeStep

def world__setTime(wid, _time):
    return _pydart2_api.world__setTime(wid, _time)
world__setTime = _pydart2_api.world__setTime

def world__getTime(wid):
    return _pydart2_api.world__getTime(wid)
world__getTime = _pydart2_api.world__getTime

def world__getSimFrames(wid):
    return _pydart2_api.world__getSimFrames(wid)
world__getSimFrames = _pydart2_api.world__getSimFrames

def world__getIndex(wid, _index):
    return _pydart2_api.world__getIndex(wid, _index)
world__getIndex = _pydart2_api.world__getIndex

def skeleton__render(wid, skid):
    return _pydart2_api.skeleton__render(wid, skid)
skeleton__render = _pydart2_api.skeleton__render

def skeleton__renderWithColor(wid, skid, inv4):
    return _pydart2_api.skeleton__renderWithColor(wid, skid, inv4)
skeleton__renderWithColor = _pydart2_api.skeleton__renderWithColor

def skeleton__getName(wid, skid):
    return _pydart2_api.skeleton__getName(wid, skid)
skeleton__getName = _pydart2_api.skeleton__getName

def skeleton__getMass(wid, skid):
    return _pydart2_api.skeleton__getMass(wid, skid)
skeleton__getMass = _pydart2_api.skeleton__getMass

def skeleton__isMobile(wid, skid):
    return _pydart2_api.skeleton__isMobile(wid, skid)
skeleton__isMobile = _pydart2_api.skeleton__isMobile

def skeleton__setMobile(wid, skid, mobile):
    return _pydart2_api.skeleton__setMobile(wid, skid, mobile)
skeleton__setMobile = _pydart2_api.skeleton__setMobile

def skeleton__getNumBodies(wid, skid):
    return _pydart2_api.skeleton__getNumBodies(wid, skid)
skeleton__getNumBodies = _pydart2_api.skeleton__getNumBodies

def skeleton__getNumDofs(wid, skid):
    return _pydart2_api.skeleton__getNumDofs(wid, skid)
skeleton__getNumDofs = _pydart2_api.skeleton__getNumDofs

def skeleton__getPositions(wid, skid, outv):
    return _pydart2_api.skeleton__getPositions(wid, skid, outv)
skeleton__getPositions = _pydart2_api.skeleton__getPositions

def skeleton__setPositions(wid, skid, inv):
    return _pydart2_api.skeleton__setPositions(wid, skid, inv)
skeleton__setPositions = _pydart2_api.skeleton__setPositions

def skeleton__getVelocities(wid, skid, outv):
    return _pydart2_api.skeleton__getVelocities(wid, skid, outv)
skeleton__getVelocities = _pydart2_api.skeleton__getVelocities

def skeleton__setVelocities(wid, skid, inv):
    return _pydart2_api.skeleton__setVelocities(wid, skid, inv)
skeleton__setVelocities = _pydart2_api.skeleton__setVelocities

def skeleton__setForces(wid, skid, inv):
    return _pydart2_api.skeleton__setForces(wid, skid, inv)
skeleton__setForces = _pydart2_api.skeleton__setForces
# This file is compatible with both classic and new-style classes.


