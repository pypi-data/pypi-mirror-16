import numpy as np

'''
Module will eventually contain classes and functions for defining attributes
of a particular POPS instrument, including type, serial number, calibration
details and other information. Most information will be read from configuration
files that are generated by the POPS data acquisition software.
'''


class POPS(object):
    """
    Class for POPS objects, which contain all instrument-specific and
    configuration-specific properties of a POPS instrument.

    Instrument specific properties include serial number and physical attributes
    of the instrument.

    Configuration specific properties include bin definitions and current
    calibration parameters (currently hard-coded).
    """

    def __init__(self):
        self.sn = '9999'  # serial number
        self.numbins = 8
        self.minhist = 1.4
        self.maxhist = 4.8
        self.calcoef = [100.56, 2.5149, 0.65612]  # power law fit looks okay
        self.diam_lim = []
        self.diam_gmid = []
        self.bin_limits()

    def bin_limits(self):
        """
        Calculates the lower and upper diameter limits for binned POPS count
        data by applying a power law fit from calibration parameters. Assumes
        input data generated by Labview histogram process are log-spaced bins
        ranging from minhist to maxhist, where minhist and maxhist are
        defined in the data acquisition software. Default is 1.4 and 4.8.
        """
        raw_lim = np.linspace(self.minhist, self.maxhist, self.numbins + 1)
        raw_lim = 10**raw_lim

        # Use a power law fit to convert raw signal to diameter
        self.diam_lim = self.calcoef[0] + self.calcoef[1]*raw_lim**self.calcoef[2]
        self.diam_gmid = (self.diam_lim[:-1] * self.diam_lim[1:]) ** 0.5

    def read_config(self):
        """
        TODO Read configuration data from .ini file.
        """
        return
