Metadata-Version: 1.1
Name: pytronlinks
Version: 0.2.1
Summary: Send commands to Links from within your Python scripts.
Home-page: https://github.com/Duroktar/Links-AI-Interface/
Author: traBpUkciP
Author-email: duroktar@gmail.com
License: BSD License
Description: =============
        pytron v0.2.1
        =============
        
        Interface with your Links AI and send commands from within your Python scripts.
        
          http://mega-voice-command.com/
        
        New features! -
            Changelog- v.0.2.1
            - Added APPDATA as default path to LINKS Install ( ai = pytronlinks.Client() )
            - Added 'Loquendo by Nuance' function wrapper
            - Added a bunch of other LINKS function as well ( check the README )
            - Adding get json response verification ( Adding type of response as parameter )
            - Added custom function parser
        
        
        Installation
        ============
        
        Simple:
        
            pip install pytronlinks
        
            install LINKS   ( http://mega-voice-command.com/ )
        
        
        Example
        =======
        
        .. code-block:: python
        
            import pytronlinks
        
            ai = pytronlinks.Client()
        
              """
              Optional client parameters-
        
                port: Port that links is listening on
                key: Links web key
                ip: ip of computer with links
                path: If you installed links in a different location,
                             point this to the Scripts folder( MUST BE RAW ) ie: (r'PATH')
        
              ex: ai = pytronlinks.Client(path='C:\\temp', ip='192.0.0.16', key='KEY123')
              """
        
        
        Make Links speak!
        =================
        
        .. code-block:: python
        
            import pytronlinks
        
            PATH = (r'C:\users\default\AppData\Roaming\LINKS\Customization\Scripts')
            TEXT = ('MVC Rocks!')
        
            ai = pytronlinks.Client(PATH)
            ai.talk(TEXT)
        
        
        Emulate speech to Links
        =======================
        
        .. code-block:: python
        
            import pytronlinks
        
            PATH = (r'C:\users\default\AppData\Roaming\LINKS\Customization\Scripts')
            TEXT = ('what is the weather like')
        
            ai = pytronlinks.Client(PATH)
            ai.emulate_speech(TEXT)
        
                Will call the command as if you had spoken to links directly
        
        
        Run custom action command
        =========================
        
         Anything you can put in Links *Action* bar, you can put in here! See example.
        
        .. code-block:: python
        
            import pytronlinks
        
        
            ai = pytronlinks.Client()
        
            ai.custom(r'[Set("Last Subject", "pytron is the coolest")]')
            ai.custom(r'[Speak("[Get("Last Subject")]")]')
        
        
        Put script into listen mode
        ===========================
        
        .. code-block:: python
        
            import pytronlinks
            """
                To get dictation from Links into the dictation.txt file for pytron
                to do something with, make a command in Links like this -
        
                  Command: pytron {speech=test_dictation}
                  Response:
                  Action: CMD /m /c "echo {speech} > \dictation.txt"
            """
        
            PATH = (r'C:\users\default\AppData\Roaming\LINKS\Customization\Scripts')
            ai = pytronlinks.Client(PATH)
        
            def main():
                dictation = listen()
                if x:
                    ( do something with dictation )
                    return
        
            try:
                while True:
                    main()
            except KeyboardInterrupt:
                pass
        
        
        Loquendo Function
        =================
        
        Sends a 'Loquendo by Nuance' speech command ( requires Nuance Loquendo voices )
        
                :param text: Text to be spoken ( with all the syntax they use, better make it raw, ie: r'text' )
                :param volume: Volume 0 - 100
                :param rate: Unsure of rate   ( needs testing )
                :param ai_name: Name of tts Voice ( case sensitive )
        
          Example:
        
        .. code-block:: python
        
            import pytronlinks
        
            ai = pytronlinks.Client()
            ai.LoqSpeak("I am an example","100","50","Simon")]
        
        
        Authors
        =======
        
        traBpUkciP / `<https://github.com/Duroktar/>`__
Keywords: MVC Links AI Interface
Platform: UNKNOWN
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Information Technology
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: Microsoft :: Windows
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3.2
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
Classifier: Programming Language :: Python
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Communications
Classifier: Topic :: Home Automation
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
Classifier: Topic :: Multimedia :: Sound/Audio :: Speech
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
