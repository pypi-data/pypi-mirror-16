Metadata-Version: 1.1
Name: salesforce-oauth-request-yplan
Version: 1.1.1
Summary: Util package to drive Salesforce Oauth Web flow for testing.
Home-page: https://github.com/YPlan/salesforce-oauth-request
Author: YPlan
Author-email: julius@yplanapp.com
License: Copyright (c) 2013 Scott Persinger

MIT License

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
Description: Salesforce Oauth Request
        ========================
        
        A bit of Requests driven utility code to drive the Salesforce.com Oauth2
        Web flow. Use this module to login to a Salesforce account using just
        the username and password. Good for tests and scripts which need
        Salesforce access\_token access.
        
        
        Installation
        ------------
        
        .. code-block:: python
        
           pip install salesforce-oauth-request-yplan
        
        
        Usage
        -----
        
        You need a Connected App defined in Salesforce so that you have all
        these pieces of info:
        
        1. ``client ID``
        2. ``client secret``
        3. ``redirect uri``
        
        Now you can get an ``access_token`` and ``instance_url`` like this:
        
        .. code-block:: python
        
            import salesforce_oauth_request
        
            result = salesforce_oauth_request.login(username=username,
                                                    password=password,
                                                    client_id=client_id,
                                                    client_secret=client_secret,
                                                    redirect_uri=redirect_uri)
        
            print "Access token:  {}".format(result['access_token'])
            print "Refresh token: {}".format(result['refresh_token'])
            print "Instance URL:  {}".format(result['instance_url'])
        
            # Now use access_token, instance_url for REST, SOAP, or BULK API access.
        
        
        Options
        -------
        
        .. code-block:: python
        
            cache_session=True/False - default False
        
        Pass the option ``cache_session=true`` to save the access token to
        ``~.sf_oauth`` to save time on repeated runs.
        
        .. code-block:: python
        
            sandbox=True/False - default False
        
        Pass ``sandbox=True`` to use a sandbox login. ## Testing
        
        
        
        
        History
        -------
        
        1.1.1 (2016-07-14)
        ------------------
        
        * Brought back ``HISTORY.rst``.
        * Changed package repository url to the fork.
        
        
        1.1.0 (2016-07-14)
        ------------------
        
        * Python2 and Python3 compatibility.
        * Forked `salesforce-oauth-request-yplan` package.
        
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Natural Language :: English
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
