{"delete_projects_repository_files_byId": {"url_param": {"id": {}}, "spec_param_number": 3, "spec_param": {"branch_name": {"required": true, "description": "The name of branch"}, "file_path": {"required": true, "description": "Full path to file. Ex. lib/class.rb"}, "commit_message": {"required": true, "description": "Commit message"}}, "name": "delete_projects_repository_files_byId", "method": "DELETE", "string": "projects/:id/repository/files", "url_param_number": 1}, "create_projects_user_byUserId": {"url_param": {"user_id": "user_id of owner"}, "spec_param_number": 10, "spec_param": {"snippets_enabled": {"required": false, "description": ""}, "name": {"required": true, "description": "new project name"}, "import_url": {"required": false, "description": ""}, "description": {"required": false, "description": "short project description"}, "default_branch": {"required": false, "description": "'master' by default"}, "issues_enabled": {"required": false, "description": ""}, "wiki_enabled": {"required": false, "description": ""}, "visibility_level": {"required": false, "description": ""}, "public": {"required": false, "description": ""}, "merge_requests_enabled": {"required": false, "description": ""}}, "name": "create_projects_user_byUserId", "method": "POST", "string": "projects/user/:user_id", "url_param_number": 1}, "modify_projects_byId": {"url_param": {"id": "The ID of a project"}, "spec_param_number": 10, "spec_param": {"snippets_enabled": {"required": false, "description": ""}, "name": {"required": false, "description": "project name"}, "description": {"required": false, "description": "short project description"}, "default_branch": {"required": false, "description": ""}, "issues_enabled": {"required": false, "description": ""}, "path": {"required": false, "description": "repository name for project"}, "wiki_enabled": {"required": false, "description": ""}, "visibility_level": {"required": false, "description": ""}, "public": {"required": false, "description": ""}, "merge_requests_enabled": {"required": false, "description": ""}}, "name": "modify_projects_byId", "method": "PUT", "string": "projects/:id", "url_param_number": 1}, "delete_users_byId": {"url_param": {"id": "The ID of the user"}, "spec_param_number": 0, "spec_param": {}, "name": "delete_users_byId", "method": "DELETE", "string": "users/:id", "url_param_number": 1}, "get_projects_snippets_byId": {"url_param": {"id": "The ID of a project"}, "spec_param_number": 0, "spec_param": {}, "name": "get_projects_snippets_byId", "method": "GET", "string": "projects/:id/snippets", "url_param_number": 1}, "get_projects_repository_branches_byId_byBranch": {"url_param": {"id": "The ID of a project", "branch": "The name of the branch"}, "spec_param_number": 0, "spec_param": {}, "name": "get_projects_repository_branches_byId_byBranch", "method": "GET", "string": "projects/:id/repository/branches/:branch", "url_param_number": 2}, "create_projects_repository_files_byId": {"url_param": {"id": {}}, "spec_param_number": 5, "spec_param": {"content": {"required": true, "description": "File content"}, "branch_name": {"required": true, "description": "The name of branch"}, "file_path": {"required": true, "description": "Full path to new file. Ex. lib/class.rb"}, "commit_message": {"required": true, "description": "Commit message"}, "encoding": {"required": false, "description": "'text' or 'base64'. Text is default."}}, "name": "create_projects_repository_files_byId", "method": "POST", "string": "projects/:id/repository/files", "url_param_number": 1}, "create_groups": {"url_param": {}, "spec_param_number": 3, "spec_param": {"path": {"required": true, "description": "The path of the group"}, "name": {"required": true, "description": "The name of the group"}, "description": {"required": false, "description": "The group's description"}}, "name": "create_groups", "method": "POST", "string": "groups", "url_param_number": 0}, "delete_users_emails_byUid_byId": {"url_param": {"uid": "id of specified user", "id": "email ID"}, "spec_param_number": 0, "spec_param": {}, "name": "delete_users_emails_byUid_byId", "method": "DELETE", "string": "users/:uid/emails/:id", "url_param_number": 2}, "get_user_keys": {"url_param": {}, "spec_param_number": 0, "spec_param": {}, "name": "get_user_keys", "method": "GET", "string": "user/keys", "url_param_number": 0}, "modify_projects_labels_byId": {"url_param": {"id": "The ID of a project"}, "spec_param_number": 3, "spec_param": {"new_name": {"required": false, "description": "The new name of the label"}, "color": {"required": false, "description": "New color of the label given in 6-digit hex notation with leading '#' sign (e.g. #FFAABB)"}, "name": {"required": true, "description": "The name of the existing label"}}, "name": "modify_projects_labels_byId", "method": "PUT", "string": "projects/:id/labels", "url_param_number": 1}, "get_projects_issues_notes_byIssueId_byId_byNoteId": {"url_param": {"issue_id": "The ID of a project issue", "id": "The ID of a project", "note_id": "The ID of an issue note"}, "spec_param_number": 0, "spec_param": {}, "name": "get_projects_issues_notes_byIssueId_byId_byNoteId", "method": "GET", "string": "projects/:id/issues/:issue_id/notes/:note_id", "url_param_number": 3}, "create_session": {"url_param": {}, "spec_param_number": 3, "spec_param": {"login": {"required": true, "description": "The login of user"}, "password": {"required": true, "description": "Valid password"}, "email": {"required": false, "description": "The email of user"}}, "name": "create_session", "method": "POST", "string": "session", "url_param_number": 0}, "delete_hooks_byId": {"url_param": {"id": "The ID of hook"}, "spec_param_number": 0, "spec_param": {}, "name": "delete_hooks_byId", "method": "DELETE", "string": "hooks/:id", "url_param_number": 1}, "get_projects_labels_byId": {"url_param": {"id": {}}, "spec_param_number": 0, "spec_param": {}, "name": "get_projects_labels_byId", "method": "GET", "string": "projects/:id/labels", "url_param_number": 1}, "modify_projects_hooks_byHookId_byId": {"url_param": {"hook_id": "The ID of a project hook", "id": "The ID or NAMESPACE/PROJECT_NAME of a project"}, "spec_param_number": 1, "spec_param": {"url": {"required": true, "description": "The hook URL"}}, "name": "modify_projects_hooks_byHookId_byId", "method": "PUT", "string": "projects/:id/hooks/:hook_id", "url_param_number": 2}, "get_projects_byId": {"url_param": {"id": "The ID or NAMESPACE/PROJECT_NAME of a project"}, "spec_param_number": 0, "spec_param": {}, "name": "get_projects_byId", "method": "GET", "string": "projects/:id", "url_param_number": 1}, "create_user_keys": {"url_param": {}, "spec_param_number": 2, "spec_param": {"key": {"required": true, "description": "new SSH key"}, "title": {"required": true, "description": "new SSH Key's title"}}, "name": "create_user_keys", "method": "POST", "string": "user/keys", "url_param_number": 0}, "modify_projects_members_byUserId_byId": {"url_param": {"user_id": "The ID of a team member", "id": "The ID or NAMESPACE/PROJECT_NAME of a project"}, "spec_param_number": 1, "spec_param": {"access_level": {"required": true, "description": "Project access level"}}, "name": "modify_projects_members_byUserId_byId", "method": "PUT", "string": "projects/:id/members/:user_id", "url_param_number": 2}, "create_user_emails": {"url_param": {}, "spec_param_number": 1, "spec_param": {"email": {"required": true, "description": "email address"}}, "name": "create_user_emails", "method": "POST", "string": "user/emails", "url_param_number": 0}, "delete_groups_members_byUserId_byId": {"url_param": {"user_id": "The ID of a group member", "id": "The ID or path of a user group"}, "spec_param_number": 0, "spec_param": {}, "name": "delete_groups_members_byUserId_byId", "method": "DELETE", "string": "groups/:id/members/:user_id", "url_param_number": 2}, "create_groups_members_byId": {"url_param": {"id": "The ID or path of a group"}, "spec_param_number": 2, "spec_param": {"access_level": {"required": true, "description": "Project access level"}, "user_id": {"required": true, "description": "The ID of a user to add"}}, "name": "create_groups_members_byId", "method": "POST", "string": "groups/:id/members", "url_param_number": 1}, "create_projects_repository_commits_comments_bySha_byId": {"url_param": {"sha": "The name of a repository branch or tag or if not given the default branch", "id": "The ID of a project"}, "spec_param_number": 4, "spec_param": {"note": {"required": true, "description": "Text of comment"}, "path": {"required": false, "description": "The file path"}, "line": {"required": false, "description": "The line number"}, "line_type": {"required": false, "description": "The line type (new or old)"}}, "name": "create_projects_repository_commits_comments_bySha_byId", "method": "POST", "string": "projects/:id/repository/commits/:sha/comments", "url_param_number": 2}, "get_hooks_byId": {"url_param": {"id": "The ID of hook"}, "spec_param_number": 0, "spec_param": {}, "name": "get_hooks_byId", "method": "GET", "string": "hooks/:id", "url_param_number": 1}, "get_namespaces": {"url_param": {}, "spec_param_number": 0, "spec_param": {}, "name": "get_namespaces", "method": "GET", "string": "namespaces", "url_param_number": 0}, "get_users_keys_byUid": {"url_param": {"uid": "id of specified user"}, "spec_param_number": 0, "spec_param": {}, "name": "get_users_keys_byUid", "method": "GET", "string": "users/:uid/keys", "url_param_number": 1}, "get_projects_repository_raw_blobs_bySha_byId": {"url_param": {"sha": "The blob SHA", "id": "The ID of a project"}, "spec_param_number": 0, "spec_param": {}, "name": "get_projects_repository_raw_blobs_bySha_byId", "method": "GET", "string": "projects/:id/repository/raw_blobs/:sha", "url_param_number": 2}, "modify_projects_issues_notes_byIssueId_byId_byNoteId": {"url_param": {"issue_id": "The ID of an issue", "id": "The ID of a project", "note_id": "The ID of a note"}, "spec_param_number": 1, "spec_param": {"body": {"required": true, "description": "The content of a note"}}, "name": "modify_projects_issues_notes_byIssueId_byId_byNoteId", "method": "PUT", "string": "projects/:id/issues/:issue_id/notes/:note_id", "url_param_number": 3}, "get_projects_events_byId": {"url_param": {"id": "The ID or NAMESPACE/PROJECT_NAME of a project"}, "spec_param_number": 0, "spec_param": {}, "name": "get_projects_events_byId", "method": "GET", "string": "projects/:id/events", "url_param_number": 1}, "get_projects_repository_commits_diff_bySha_byId": {"url_param": {"sha": "The name of a repository branch or tag or if not given the default branch", "id": "The ID of a project"}, "spec_param_number": 0, "spec_param": {}, "name": "get_projects_repository_commits_diff_bySha_byId", "method": "GET", "string": "projects/:id/repository/commits/:sha/diff", "url_param_number": 2}, "delete_projects_labels_byId": {"url_param": {"id": {}}, "spec_param_number": 0, "spec_param": {}, "name": "delete_projects_labels_byId", "method": "DELETE", "string": "projects/:id/labels", "url_param_number": 1}, "delete_projects_members_byUserId_byId": {"url_param": {"user_id": "The ID of a team member", "id": "The ID or NAMESPACE/PROJECT_NAME of a project"}, "spec_param_number": 0, "spec_param": {}, "name": "delete_projects_members_byUserId_byId", "method": "DELETE", "string": "projects/:id/members/:user_id", "url_param_number": 2}, "get_projects": {"url_param": {}, "spec_param_number": 4, "spec_param": {"sort": {"required": false, "description": "Return requests sorted in "}, "archived": {"required": false, "description": "if passed, limit by archived status"}, "order_by": {"required": false, "description": "Return requests ordered by "}, "search": {"required": false, "description": "Return list of authorized projects according to a search criteria"}}, "name": "get_projects", "method": "GET", "string": "projects", "url_param_number": 0}, "modify_projects_merge_requests_notes_byMergeRequest_byNoteId_byId": {"url_param": {"merge_request_id": "The ID of a merge request", "note_id": "The ID of a note", "id": "The ID of a project"}, "spec_param_number": 1, "spec_param": {"body": {"required": true, "description": "The content of a note"}}, "name": "modify_projects_merge_requests_notes_byMergeRequest_byNoteId_byId", "method": "PUT", "string": "projects/:id/merge_requests/:merge_request_id/notes/:note_id", "url_param_number": 3}, "get_projects_all": {"url_param": {}, "spec_param_number": 4, "spec_param": {"sort": {"required": false, "description": "Return requests sorted in "}, "archived": {"required": false, "description": "if passed, limit by archived status"}, "order_by": {"required": false, "description": "Return requests ordered by "}, "search": {"required": false, "description": "Return list of authorized projects according to a search criteria"}}, "name": "get_projects_all", "method": "GET", "string": "projects/all", "url_param_number": 0}, "delete_user_keys_byId": {"url_param": {"id": "SSH key ID"}, "spec_param_number": 0, "spec_param": {}, "name": "delete_user_keys_byId", "method": "DELETE", "string": "user/keys/:id", "url_param_number": 1}, "modify_projects_snippets_bySnippetId_byId": {"url_param": {"snippet_id": "The ID of a project's snippet", "id": "The ID of a project"}, "spec_param_number": 4, "spec_param": {"file_name": {"required": false, "description": "The name of a snippet file"}, "visibility_level": {"required": false, "description": "The snippet's visibility"}, "code": {"required": false, "description": "The content of a snippet"}, "title": {"required": false, "description": "The title of a snippet"}}, "name": "modify_projects_snippets_bySnippetId_byId", "method": "PUT", "string": "projects/:id/snippets/:snippet_id", "url_param_number": 2}, "create_projects_labels_byId": {"url_param": {"id": "The ID of a project"}, "spec_param_number": 2, "spec_param": {"color": {"required": true, "description": "Color of the label given in 6-digit hex notation with leading '#' sign (e.g. #FFAABB)"}, "name": {"required": true, "description": "The name of the label"}}, "name": "create_projects_labels_byId", "method": "POST", "string": "projects/:id/labels", "url_param_number": 1}, "get_users_byId": {"url_param": {"id": "The ID of a user"}, "spec_param_number": 0, "spec_param": {}, "name": "get_users_byId", "method": "GET", "string": "users/:id", "url_param_number": 1}, "create_users_emails_byId": {"url_param": {"id": "id of specified user"}, "spec_param_number": 1, "spec_param": {"email": {"required": true, "description": "email address"}}, "name": "create_users_emails_byId", "method": "POST", "string": "users/:id/emails", "url_param_number": 1}, "create_users_keys_byId": {"url_param": {"id": "id of specified user"}, "spec_param_number": 2, "spec_param": {"key": {"required": true, "description": "new SSH key"}, "title": {"required": true, "description": "new SSH Key's title"}}, "name": "create_users_keys_byId", "method": "POST", "string": "users/:id/keys", "url_param_number": 1}, "create_projects_snippets_notes_bySnippetId_byId": {"url_param": {"snippet_id": "The ID of a snippet", "id": "The ID of a project"}, "spec_param_number": 1, "spec_param": {"body": {"required": true, "description": "The content of a note"}}, "name": "create_projects_snippets_notes_bySnippetId_byId", "method": "POST", "string": "projects/:id/snippets/:snippet_id/notes", "url_param_number": 2}, "get_projects_snippets_bySnippetId_byId": {"url_param": {"snippet_id": "The ID of a project's snippet", "id": "The ID of a project"}, "spec_param_number": 0, "spec_param": {}, "name": "get_projects_snippets_bySnippetId_byId", "method": "GET", "string": "projects/:id/snippets/:snippet_id", "url_param_number": 2}, "modify_projects_snippets_notes_bySnippetId_byId_byNoteId": {"url_param": {"snippet_id": "The ID of a snippet", "id": "The ID of a project", "note_id": "The ID of a note"}, "spec_param_number": 1, "spec_param": {"body": {"required": true, "description": "The content of a note"}}, "name": "modify_projects_snippets_notes_bySnippetId_byId_byNoteId", "method": "PUT", "string": "projects/:id/snippets/:snippet_id/notes/:note_id", "url_param_number": 3}, "get_projects_members_byId": {"url_param": {"id": "The ID or NAMESPACE/PROJECT_NAME of a project"}, "spec_param_number": 1, "spec_param": {"query": {"required": false, "description": "Query string to search for members"}}, "name": "get_projects_members_byId", "method": "GET", "string": "projects/:id/members", "url_param_number": 1}, "modify_users_block_byUid": {"url_param": {"uid": "id of specified user"}, "spec_param_number": 0, "spec_param": {}, "name": "modify_users_block_byUid", "method": "PUT", "string": "users/:uid/block", "url_param_number": 1}, "create_projects_hooks_byId": {"url_param": {"id": "The ID or NAMESPACE/PROJECT_NAME of a project"}, "spec_param_number": 1, "spec_param": {"url": {"required": true, "description": "The hook URL"}}, "name": "create_projects_hooks_byId", "method": "POST", "string": "projects/:id/hooks", "url_param_number": 1}, "modify_users_unblock_byUid": {"url_param": {"uid": "id of specified user"}, "spec_param_number": 0, "spec_param": {}, "name": "modify_users_unblock_byUid", "method": "PUT", "string": "users/:uid/unblock", "url_param_number": 1}, "get_projects_snippets_notes_bySnippetId_byId_byNoteId": {"url_param": {"snippet_id": "The ID of a project snippet", "id": "The ID of a project", "note_id": "The ID of an snippet note"}, "spec_param_number": 0, "spec_param": {}, "name": "get_projects_snippets_notes_bySnippetId_byId_byNoteId", "method": "GET", "string": "projects/:id/snippets/:snippet_id/notes/:note_id", "url_param_number": 3}, "get_projects_owned": {"url_param": {}, "spec_param_number": 4, "spec_param": {"sort": {"required": false, "description": "Return requests sorted in "}, "archived": {"required": false, "description": "if passed, limit by archived status"}, "order_by": {"required": false, "description": "Return requests ordered by "}, "search": {"required": false, "description": "Return list of authorized projects according to a search criteria"}}, "name": "get_projects_owned", "method": "GET", "string": "projects/owned", "url_param_number": 0}, "create_hooks": {"url_param": {}, "spec_param_number": 1, "spec_param": {"url": {"required": true, "description": "The hook URL"}}, "name": "create_hooks", "method": "POST", "string": "hooks", "url_param_number": 0}, "create_projects_fork_byId": {"url_param": {"id": "The ID of the project to be forked"}, "spec_param_number": 0, "spec_param": {}, "name": "create_projects_fork_byId", "method": "POST", "string": "projects/fork/:id", "url_param_number": 1}, "modify_projects_repository_branches_protect_byId_byBranch": {"url_param": {"id": "The ID of a project", "branch": "The name of the branch"}, "spec_param_number": 0, "spec_param": {}, "name": "modify_projects_repository_branches_protect_byId_byBranch", "method": "PUT", "string": "projects/:id/repository/branches/:branch/protect", "url_param_number": 2}, "create_projects_repository_branches_byId": {"url_param": {"id": "The ID of a project"}, "spec_param_number": 2, "spec_param": {"branch_name": {"required": true, "description": "The name of the branch"}, "ref": {"required": true, "description": "Create branch from commit SHA or existing branch"}}, "name": "create_projects_repository_branches_byId", "method": "POST", "string": "projects/:id/repository/branches", "url_param_number": 1}, "get_projects_repository_commits_comments_bySha_byId": {"url_param": {"sha": "The name of a repository branch or tag or if not given the default branch", "id": "The ID of a project"}, "spec_param_number": 0, "spec_param": {}, "name": "get_projects_repository_commits_comments_bySha_byId", "method": "GET", "string": "projects/:id/repository/commits/:sha/comments", "url_param_number": 2}, "get_projects_repository_blobs_bySha_byId": {"url_param": {"sha": "The commit or branch name", "id": "The ID of a project"}, "spec_param_number": 1, "spec_param": {"filepath": {"required": true, "description": "The path the file"}}, "name": "get_projects_repository_blobs_bySha_byId", "method": "GET", "string": "projects/:id/repository/blobs/:sha", "url_param_number": 2}, "get_projects_issues_notes_byIssueId_byId": {"url_param": {"issue_id": "The ID of an issue", "id": "The ID of a project"}, "spec_param_number": 0, "spec_param": {}, "name": "get_projects_issues_notes_byIssueId_byId", "method": "GET", "string": "projects/:id/issues/:issue_id/notes", "url_param_number": 2}, "get_projects_hooks_byId": {"url_param": {"id": "The ID or NAMESPACE/PROJECT_NAME of a project"}, "spec_param_number": 0, "spec_param": {}, "name": "get_projects_hooks_byId", "method": "GET", "string": "projects/:id/hooks", "url_param_number": 1}, "get_projects_merge_requests_notes_byMergeRequest_byNoteId_byId": {"url_param": {"merge_request_id": "The ID of a project merge request", "note_id": "The ID of a merge request note", "id": "The ID of a project"}, "spec_param_number": 0, "spec_param": {}, "name": "get_projects_merge_requests_notes_byMergeRequest_byNoteId_byId", "method": "GET", "string": "projects/:id/merge_requests/:merge_request_id/notes/:note_id", "url_param_number": 3}, "delete_projects_repository_branches_byId_byBranch": {"url_param": {"id": "The ID of a project", "branch": "The name of the branch"}, "spec_param_number": 0, "spec_param": {}, "name": "delete_projects_repository_branches_byId_byBranch", "method": "DELETE", "string": "projects/:id/repository/branches/:branch", "url_param_number": 2}, "get_projects_repository_archive_byId": {"url_param": {"id": "The ID of a project"}, "spec_param_number": 1, "spec_param": {"sha": {"required": false, "description": "The commit SHA to download defaults to the tip of the default branch"}}, "name": "get_projects_repository_archive_byId", "method": "GET", "string": "projects/:id/repository/archive", "url_param_number": 1}, "delete_projects_snippets_bySnippetId_byId": {"url_param": {"snippet_id": "The ID of a project's snippet", "id": "The ID of a project"}, "spec_param_number": 0, "spec_param": {}, "name": "delete_projects_snippets_bySnippetId_byId", "method": "DELETE", "string": "projects/:id/snippets/:snippet_id", "url_param_number": 2}, "create_projects_issues_notes_byIssueId_byId": {"url_param": {"issue_id": "The ID of an issue", "id": "The ID of a project"}, "spec_param_number": 1, "spec_param": {"body": {"required": true, "description": "The content of a note"}}, "name": "create_projects_issues_notes_byIssueId_byId", "method": "POST", "string": "projects/:id/issues/:issue_id/notes", "url_param_number": 2}, "get_projects_repository_commits_byId": {"url_param": {"id": "The ID of a project"}, "spec_param_number": 1, "spec_param": {"ref_name": {"required": false, "description": "The name of a repository branch or tag or if not given the default branch"}}, "name": "get_projects_repository_commits_byId", "method": "GET", "string": "projects/:id/repository/commits", "url_param_number": 1}, "delete_users_keys_byUid_byId": {"url_param": {"uid": "id of specified user", "id": "SSH key ID"}, "spec_param_number": 0, "spec_param": {}, "name": "delete_users_keys_byUid_byId", "method": "DELETE", "string": "users/:uid/keys/:id", "url_param_number": 2}, "get_projects_repository_compare_byId": {"url_param": {"id": "The ID of a project"}, "spec_param_number": 2, "spec_param": {"to": {"required": true, "description": "the commit SHA or branch name"}, "from": {"required": true, "description": "the commit SHA or branch name"}}, "name": "get_projects_repository_compare_byId", "method": "GET", "string": "projects/:id/repository/compare", "url_param_number": 1}, "create_projects_members_byId": {"url_param": {"id": "The ID or NAMESPACE/PROJECT_NAME of a project"}, "spec_param_number": 2, "spec_param": {"access_level": {"required": true, "description": "Project access level"}, "user_id": {"required": true, "description": "The ID of a user to add"}}, "name": "create_projects_members_byId", "method": "POST", "string": "projects/:id/members", "url_param_number": 1}, "create_projects_merge_requests_notes_byMergeRequest_byId": {"url_param": {"merge_request_id": "The ID of a merge request", "id": "The ID of a project"}, "spec_param_number": 1, "spec_param": {"body": {"required": true, "description": "The content of a note"}}, "name": "create_projects_merge_requests_notes_byMergeRequest_byId", "method": "POST", "string": "projects/:id/merge_requests/:merge_request_id/notes", "url_param_number": 2}, "modify_projects_repository_files_byId": {"url_param": {"id": {}}, "spec_param_number": 5, "spec_param": {"content": {"required": true, "description": "New file content"}, "branch_name": {"required": true, "description": "The name of branch"}, "file_path": {"required": true, "description": "Full path to file. Ex. lib/class.rb"}, "commit_message": {"required": true, "description": "Commit message"}, "encoding": {"required": false, "description": "'text' or 'base64'. Text is default."}}, "name": "modify_projects_repository_files_byId", "method": "PUT", "string": "projects/:id/repository/files", "url_param_number": 1}, "get_user_emails": {"url_param": {}, "spec_param_number": 0, "spec_param": {}, "name": "get_user_emails", "method": "GET", "string": "user/emails", "url_param_number": 0}, "get_projects_repository_commits_bySha_byId": {"url_param": {"sha": "The commit hash or name of a repository branch or tag", "id": "The ID of a project"}, "spec_param_number": 0, "spec_param": {}, "name": "get_projects_repository_commits_bySha_byId", "method": "GET", "string": "projects/:id/repository/commits/:sha", "url_param_number": 2}, "get_projects_snippets_notes_bySnippetId_byId": {"url_param": {"snippet_id": "The ID of a project snippet", "id": "The ID of a project"}, "spec_param_number": 0, "spec_param": {}, "name": "get_projects_snippets_notes_bySnippetId_byId", "method": "GET", "string": "projects/:id/snippets/:snippet_id/notes", "url_param_number": 2}, "get_projects_repository_files_byId": {"url_param": {"id": {}}, "spec_param_number": 2, "spec_param": {"ref": {"required": true, "description": "The name of branch, tag or commit"}, "file_path": {"required": true, "description": "Full path to new file. Ex. lib/class.rb"}}, "name": "get_projects_repository_files_byId", "method": "GET", "string": "projects/:id/repository/files", "url_param_number": 1}, "get_users": {"url_param": {}, "spec_param_number": 0, "spec_param": {}, "name": "get_users", "method": "GET", "string": "users", "url_param_number": 0}, "create_projects": {"url_param": {}, "spec_param_number": 11, "spec_param": {"namespace_id": {"required": false, "description": "namespace for the new project (defaults to user)"}, "snippets_enabled": {"required": false, "description": ""}, "name": {"required": true, "description": "new project name"}, "import_url": {"required": false, "description": ""}, "description": {"required": false, "description": "short project description"}, "issues_enabled": {"required": false, "description": ""}, "path": {"required": false, "description": "custom repository name for new project. By default generated based on name"}, "wiki_enabled": {"required": false, "description": ""}, "visibility_level": {"required": false, "description": ""}, "public": {"required": false, "description": ""}, "merge_requests_enabled": {"required": false, "description": ""}}, "name": "create_projects", "method": "POST", "string": "projects", "url_param_number": 0}, "modify_projects_repository_branches_unprotect_byId_byBranch": {"url_param": {"id": "The ID of a project", "branch": "The name of the branch"}, "spec_param_number": 0, "spec_param": {}, "name": "modify_projects_repository_branches_unprotect_byId_byBranch", "method": "PUT", "string": "projects/:id/repository/branches/:branch/unprotect", "url_param_number": 2}, "create_projects_repository_tags_byId": {"url_param": {"id": "The ID of a project"}, "spec_param_number": 3, "spec_param": {"tag_name": {"required": true, "description": "The name of a tag"}, "ref": {"required": true, "description": "Create tag using commit SHA, another tag name, or branch name."}, "message": {"required": false, "description": "Creates annotated tag."}}, "name": "create_projects_repository_tags_byId", "method": "POST", "string": "projects/:id/repository/tags", "url_param_number": 1}, "get_projects_repository_tree_byId": {"url_param": {"id": "The ID of a project"}, "spec_param_number": 2, "spec_param": {"path": {"required": false, "description": "The path inside repository. Used to get contend of subdirectories"}, "ref_name": {"required": false, "description": "The name of a repository branch or tag or if not given the default branch"}}, "name": "get_projects_repository_tree_byId", "method": "GET", "string": "projects/:id/repository/tree", "url_param_number": 1}, "create_projects_snippets_byId": {"url_param": {"id": "The ID of a project"}, "spec_param_number": 4, "spec_param": {"file_name": {"required": true, "description": "The name of a snippet file"}, "visibility_level": {"required": true, "description": "The snippet's visibility"}, "code": {"required": true, "description": "The content of a snippet"}, "title": {"required": true, "description": "The title of a snippet"}}, "name": "create_projects_snippets_byId", "method": "POST", "string": "projects/:id/snippets", "url_param_number": 1}, "get_projects_repository_tags_byId": {"url_param": {"id": "The ID of a project"}, "spec_param_number": 0, "spec_param": {}, "name": "get_projects_repository_tags_byId", "method": "GET", "string": "projects/:id/repository/tags", "url_param_number": 1}, "modify_groups_members_byUserId_byId": {"url_param": {"user_id": "The ID of a group member", "id": "The ID of a group"}, "spec_param_number": 1, "spec_param": {"access_level": {"required": true, "description": "Project access level"}}, "name": "modify_groups_members_byUserId_byId", "method": "PUT", "string": "groups/:id/members/:user_id", "url_param_number": 2}, "delete_groups_byId": {"url_param": {"id": "The ID or path of a user group"}, "spec_param_number": 0, "spec_param": {}, "name": "delete_groups_byId", "method": "DELETE", "string": "groups/:id", "url_param_number": 1}, "get_groups_members_byId": {"url_param": {"id": {}}, "spec_param_number": 0, "spec_param": {}, "name": "get_groups_members_byId", "method": "GET", "string": "groups/:id/members", "url_param_number": 1}, "create_groups_projects_byProjectId_byId": {"url_param": {"project_id": "The ID of a project", "id": "The ID or path of a group"}, "spec_param_number": 0, "spec_param": {}, "name": "create_groups_projects_byProjectId_byId", "method": "POST", "string": "groups/:id/projects/:project_id", "url_param_number": 2}, "get_users_emails_byUid": {"url_param": {"uid": "id of specified user"}, "spec_param_number": 0, "spec_param": {}, "name": "get_users_emails_byUid", "method": "GET", "string": "users/:uid/emails", "url_param_number": 1}, "create_projects_fork_byForkedFrom_byId": {"url_param": {"forked_from_id": {}, "id": "The ID of the project"}, "spec_param_number": 1, "spec_param": {"forked_from_id:": {"required": true, "description": "The ID of the project that was forked from"}}, "name": "create_projects_fork_byForkedFrom_byId", "method": "POST", "string": "projects/:id/fork/:forked_from_id", "url_param_number": 2}, "delete_projects_hooks_byHookId_byId": {"url_param": {"hook_id": "The ID of hook to delete", "id": "The ID or NAMESPACE/PROJECT_NAME of a project"}, "spec_param_number": 0, "spec_param": {}, "name": "delete_projects_hooks_byHookId_byId", "method": "DELETE", "string": "projects/:id/hooks/:hook_id", "url_param_number": 2}, "get_groups": {"url_param": {}, "spec_param_number": 0, "spec_param": {}, "name": "get_groups", "method": "GET", "string": "groups", "url_param_number": 0}, "get_user": {"url_param": {}, "spec_param_number": 0, "spec_param": {}, "name": "get_user", "method": "GET", "string": "user", "url_param_number": 0}, "get_groups_byId": {"url_param": {"id": "The ID or path of a group"}, "spec_param_number": 0, "spec_param": {}, "name": "get_groups_byId", "method": "GET", "string": "groups/:id", "url_param_number": 1}, "delete_projects_fork_byId": {"url_param": {"id": {}}, "spec_param_number": 0, "spec_param": {}, "name": "delete_projects_fork_byId", "method": "DELETE", "string": "projects/:id/fork", "url_param_number": 1}, "create_users": {"url_param": {}, "spec_param_number": 15, "spec_param": {"username": {"required": true, "description": "Username"}, "bio": {"required": false, "description": "User's biography"}, "extern_uid": {"required": false, "description": "External UID"}, "name": {"required": true, "description": "Name"}, "can_create_group": {"required": false, "description": "User can create groups"}, "projects_limit": {"required": false, "description": "Number of projects user can create"}, "twitter": {"required": false, "description": "Twitter account"}, "provider": {"required": false, "description": "External provider name"}, "confirm": {"required": false, "description": "Require confirmation"}, "linkedin": {"required": false, "description": "LinkedIn"}, "admin": {"required": false, "description": "User is admin"}, "skype": {"required": false, "description": "Skype ID"}, "password": {"required": true, "description": "Password"}, "email": {"required": true, "description": "Email"}, "website_url": {"required": false, "description": "Website URL"}}, "name": "create_users", "method": "POST", "string": "users", "url_param_number": 0}, "get_hooks": {"url_param": {}, "spec_param_number": 0, "spec_param": {}, "name": "get_hooks", "method": "GET", "string": "hooks", "url_param_number": 0}, "get_projects_repository_contributors_byId": {"url_param": {"id": "The ID of a project"}, "spec_param_number": 0, "spec_param": {}, "name": "get_projects_repository_contributors_byId", "method": "GET", "string": "projects/:id/repository/contributors", "url_param_number": 1}, "get_projects_members_byUserId_byId": {"url_param": {"user_id": "The ID of a user", "id": "The ID or NAMESPACE/PROJECT_NAME of a project"}, "spec_param_number": 0, "spec_param": {}, "name": "get_projects_members_byUserId_byId", "method": "GET", "string": "projects/:id/members/:user_id", "url_param_number": 2}, "get_projects_search_byQuery": {"url_param": {"query": "A string contained in the project name"}, "spec_param_number": 4, "spec_param": {"sort": {"required": false, "description": "Return requests sorted in "}, "per_page": {"required": false, "description": "number of projects to return per page"}, "order_by": {"required": false, "description": "Return requests ordered by "}, "page": {"required": false, "description": "the page to retrieve"}}, "name": "get_projects_search_byQuery", "method": "GET", "string": "projects/search/:query", "url_param_number": 1}, "modify_users_byId": {"url_param": {"id": {}}, "spec_param_number": 2, "spec_param": {"admin": {"required": false, "description": "User is admin"}, "can_create_group": {"required": false, "description": "User can create groups"}}, "name": "modify_users_byId", "method": "PUT", "string": "users/:id", "url_param_number": 1}, "get_user_emails_byId": {"url_param": {"id": "email ID"}, "spec_param_number": 0, "spec_param": {}, "name": "get_user_emails_byId", "method": "GET", "string": "user/emails/:id", "url_param_number": 1}, "get_projects_hooks_byHookId_byId": {"url_param": {"hook_id": "The ID of a project hook", "id": "The ID or NAMESPACE/PROJECT_NAME of a project"}, "spec_param_number": 0, "spec_param": {}, "name": "get_projects_hooks_byHookId_byId", "method": "GET", "string": "projects/:id/hooks/:hook_id", "url_param_number": 2}, "get_user_keys_byId": {"url_param": {"id": "The ID of an SSH key"}, "spec_param_number": 0, "spec_param": {}, "name": "get_user_keys_byId", "method": "GET", "string": "user/keys/:id", "url_param_number": 1}, "get_projects_merge_requests_notes_byMergeRequest_byId": {"url_param": {"merge_request_id": "The ID of a project merge request", "id": "The ID of a project"}, "spec_param_number": 0, "spec_param": {}, "name": "get_projects_merge_requests_notes_byMergeRequest_byId", "method": "GET", "string": "projects/:id/merge_requests/:merge_request_id/notes", "url_param_number": 2}, "get_projects_repository_branches_byId": {"url_param": {"id": "The ID of a project"}, "spec_param_number": 0, "spec_param": {}, "name": "get_projects_repository_branches_byId", "method": "GET", "string": "projects/:id/repository/branches", "url_param_number": 1}, "delete_user_emails_byId": {"url_param": {"id": "email ID"}, "spec_param_number": 0, "spec_param": {}, "name": "delete_user_emails_byId", "method": "DELETE", "string": "user/emails/:id", "url_param_number": 1}, "get_projects_snippets_raw_bySnippetId_byId": {"url_param": {"snippet_id": "The ID of a project's snippet", "id": "The ID of a project"}, "spec_param_number": 0, "spec_param": {}, "name": "get_projects_snippets_raw_bySnippetId_byId", "method": "GET", "string": "projects/:id/snippets/:snippet_id/raw", "url_param_number": 2}, "delete_projects_byId": {"url_param": {"id": "The ID of a project"}, "spec_param_number": 0, "spec_param": {}, "name": "delete_projects_byId", "method": "DELETE", "string": "projects/:id", "url_param_number": 1}}