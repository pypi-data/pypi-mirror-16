Metadata-Version: 2.0
Name: enscons
Version: 0.3.0
Sumary: Tools for building Python packages with SCons
Home-Page: https://bitbucket.org/dholth/enscons
Author: Daniel Holth
Author-email: dholth@fastmail.fm
License: MIT
Keywords: packaging wheel
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Requires-Dist: import-scons
Requires-Dist: pytoml (>=0.1)
Requires-Dist: setuptools
Requires-Dist: wheel
Provides-Extra: doc
Requires-Dist: sphinx; extra == 'doc'


enscons
=======

An experimental Python packaging system using SCons.

This is intended to be the shortest possible code to build
pip compatible wheels and sdists with SCons. Rather than adding
build features to a Python packaging system, enscons adds Python
packaging to a general purpose build system.

using enscons
=============

Copy enscons' pyproject.toml, SConstruct, and setup.py into your own
project.

Edit pyproject.toml with your own setup.py-style arguments. Enscons
only uses those arguments that affect the static metadata, PKG-INFO or
METADATA, and not build-related arguments such as C extensions.

Or try running ``python -m enscons.setup2toml`` next to your ``setup.py``
to extract its arguments as toml.

Recognized keys: name, version, description, description_file, url,
author, author_email, license, keywords, platform, classifiers,
install_requires, extras_require

Run scons or 'python setup.py' to build all targets.

Why SCons?
==========

SCons is a general purpose build system. It is pure Python, and it
is on the cusp of becoming Python 3 compatible. These features make
it a good candidate for an experimental Python packaging system.
