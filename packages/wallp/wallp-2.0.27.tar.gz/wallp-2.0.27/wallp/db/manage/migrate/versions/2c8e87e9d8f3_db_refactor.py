"""db refactor

Revision ID: 2c8e87e9d8f3
Revises: 25eef620cf9e
Create Date: 2016-04-05 19:06:24.531607

"""

# revision identifiers, used by Alembic.
revision = '2c8e87e9d8f3'
down_revision = '25eef620cf9e'
branch_labels = None
depends_on = None


from alembic import op
import sqlalchemy as sa

from wallp.db.model.base import Base
from sqlalchemy.exc import IntegrityError
from sqlalchemy import text


def upgrade():
	### commands auto generated by Alembic - please adjust! ###
	op.create_table('config2',
	sa.Column('id', sa.Integer(), nullable=False),
	sa.Column('name', sa.String(length=128), nullable=False),
	sa.Column('value', sa.String(length=512), nullable=True),
	sa.Column('type', sa.String(length=15), nullable=True),
	sa.PrimaryKeyConstraint('id'),
	sa.UniqueConstraint('name')
	)

	# Amol
	connection = op.get_bind()
	Base.metadata.reflect(connection.engine)		

	def copy_data(src_table, dst_table, values_fn, uniq=[], skip=lambda row : False):
		st = Base.metadata.tables[src_table]
		dt = Base.metadata.tables[dst_table]

		check_uniq = len(uniq) > 0

		uniq_rows = []  
		for row in connection.execute(st.select()):
			if skip(row):
				continue

			values = values_fn(row)
			
			if check_uniq:
				if any(map(lambda v : all([v.get(f) == values.get(f) for f in uniq]), uniq_rows)):
					continue

			uniq_rows.append(values)

		op.bulk_insert(dt, uniq_rows)
		op.drop_table(src_table)

	# copy data from table: config
	concat_group_name = lambda g, n: n if (g is None or g == '') else g + '.' + n

	copy_data('config', 'config2', lambda row : {'name': concat_group_name(row.group, row.name), 'value': row.value, 'type': row.type }, uniq=['name'],
			skip=lambda row : row.name == 'enabled')
	#op.rename_table('config2', 'config')

	op.create_table('imgur_album',
	sa.Column('id', sa.Integer(), nullable=False),
	sa.Column('album_id', sa.String(length=512), nullable=True),
	sa.Column('image_count', sa.Integer(), nullable=True),
	sa.Column('user', sa.String(length=512), nullable=True),
	sa.Column('enabled', sa.Boolean(), nullable=True),
	sa.Column('used_image_count', sa.Integer(), nullable=True),
	sa.Column('title', sa.String(length=1024), nullable=True),
	sa.Column('description', sa.Text(), nullable=True),
	sa.Column('wallpaper', sa.Boolean(), nullable=True),
	sa.Column('favorite', sa.Boolean(), nullable=True),
	sa.PrimaryKeyConstraint('id'),
	sa.UniqueConstraint('album_id')
	)

	# copy data from table: imgur
	extract_album_id = lambda url : url[url.rfind('/') + 1 : url.rfind('/') + 6]
	copy_data('imgur', 'imgur_album', lambda row : {'album_id': extract_album_id(row.url), 'enabled': row.enabled}, uniq=['album_id'])

	op.create_table('source',
	sa.Column('id', sa.Integer(), nullable=False),
	sa.Column('name', sa.String(length=64), nullable=True),
	sa.Column('enabled', sa.Boolean(), nullable=True),
	sa.PrimaryKeyConstraint('id'),
	sa.UniqueConstraint('name')
	)

	op.create_table('subreddit',
	sa.Column('id', sa.Integer(), nullable=False),
	sa.Column('name', sa.String(length=256), nullable=True),
	sa.Column('enabled', sa.Boolean(), nullable=True),
	sa.PrimaryKeyConstraint('id'),
	sa.UniqueConstraint('name')
	)

	# copy data from table: reddit
	copy_data('reddit', 'subreddit', lambda row : {'name': row.name, 'enabled': row.enabled}, uniq=['name'])

	op.create_table('var',
	sa.Column('id', sa.Integer(), nullable=False),
	sa.Column('name', sa.String(length=128), nullable=True),
	sa.Column('value', sa.String(length=512), nullable=True),
	sa.Column('type', sa.String(length=15), nullable=True),
	sa.PrimaryKeyConstraint('id'),
	sa.UniqueConstraint('name')
	)

	# copy data from table: globalvars
	copy_data('globalvars', 'var', lambda row : {'name': concat_group_name(row.group, row.name), 'value': row.value, 'type': row.type }, uniq=['name'])
    	
	#op.drop_table('config')
	#op.drop_table('globalvars')
	#op.drop_table('reddit')
	#op.drop_table('imgur')

	### end Alembic commands ###


def downgrade():
	### commands auto generated by Alembic - please adjust! ###
	op.create_table('imgur',
	sa.Column('id', sa.INTEGER(), nullable=False),
	sa.Column('url', sa.VARCHAR(length=512), nullable=True),
	sa.Column('image_count', sa.INTEGER(), nullable=True),
	sa.Column('enabled', sa.BOOLEAN(), nullable=True),
	sa.PrimaryKeyConstraint('id')
	)
	op.create_table('reddit',
	sa.Column('id', sa.INTEGER(), nullable=False),
	sa.Column('name', sa.VARCHAR(length=70), nullable=True),
	sa.Column('enabled', sa.BOOLEAN(), nullable=True),
	sa.PrimaryKeyConstraint('id')
	)
	op.create_table('globalvars',
	sa.Column('id', sa.INTEGER(), nullable=False),
	sa.Column('group', sa.VARCHAR(length=20), nullable=True),
	sa.Column('name', sa.VARCHAR(length=40), nullable=True),
	sa.Column('value', sa.VARCHAR(length=512), nullable=True),
	sa.Column('type', sa.VARCHAR(length=15), nullable=True),
	sa.PrimaryKeyConstraint('id'),
	sa.UniqueConstraint('group', 'name')
	)
	op.create_table('config',
	sa.Column('id', sa.INTEGER(), nullable=False),
	sa.Column('group', sa.VARCHAR(length=20), nullable=True),
	sa.Column('name', sa.VARCHAR(length=40), nullable=True),
	sa.Column('value', sa.VARCHAR(length=512), nullable=True),
	sa.Column('type', sa.VARCHAR(length=15), nullable=True),
	sa.PrimaryKeyConstraint('id'),
	sa.UniqueConstraint('group', 'name')
	)
	op.drop_table('var')
	op.drop_table('subreddit')
	op.drop_table('source')
	op.drop_table('imgur_album')
	op.drop_table('config2')
	### end Alembic commands ###
