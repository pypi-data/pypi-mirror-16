# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: server.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='server.proto',
  package='',
  serialized_pb=_b('\n\x0cserver.proto\"\x1a\n\tFrequency\x12\r\n\x05value\x18\x01 \x02(\t\"\x1f\n\nLastChange\x12\x11\n\ttimestamp\x18\x02 \x02(\x05\"C\n\tImageInfo\x12\x11\n\textension\x18\x01 \x02(\t\x12\x0e\n\x06length\x18\x02 \x02(\x05\x12\x13\n\x0b\x63hunk_count\x18\x03 \x02(\x05\"\x1a\n\nImageChunk\x12\x0c\n\x04\x64\x61ta\x18\x01 \x02(\x0c\"\x0c\n\nInProgress\"\x82\x03\n\x08Response\x12\x1c\n\x04type\x18\x01 \x02(\x0e\x32\x0e.Response.Type\x12\x1f\n\tfrequency\x18\x02 \x01(\x0b\x32\n.FrequencyH\x00\x12\"\n\x0blast_change\x18\x03 \x01(\x0b\x32\x0b.LastChangeH\x00\x12 \n\nimage_info\x18\x04 \x01(\x0b\x32\n.ImageInfoH\x00\x12\"\n\x0bimage_chunk\x18\x05 \x01(\x0b\x32\x0b.ImageChunkH\x00\x12\"\n\x0bin_progress\x18\x06 \x01(\x0b\x32\x0b.InProgressH\x00\"\x9f\x01\n\x04Type\x12\r\n\tFREQUENCY\x10\x01\x12\x0f\n\x0bLAST_CHANGE\x10\x02\x12\x0e\n\nIMAGE_INFO\x10\x03\x12\x0f\n\x0bIMAGE_CHUNK\x10\x04\x12\x0f\n\x0bIMAGE_ABORT\x10\x05\x12\x12\n\x0eIMAGE_CHANGING\x10\x06\x12\x0e\n\nIMAGE_NONE\x10\x07\x12\x0f\n\x0b\x42\x41\x44_REQUEST\x10\x08\x12\x10\n\x0cSERVER_ERROR\x10\tB\x07\n\x05value')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)



_RESPONSE_TYPE = _descriptor.EnumDescriptor(
  name='Type',
  full_name='Response.Type',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='FREQUENCY', index=0, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LAST_CHANGE', index=1, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IMAGE_INFO', index=2, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IMAGE_CHUNK', index=3, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IMAGE_ABORT', index=4, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IMAGE_CHANGING', index=5, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IMAGE_NONE', index=6, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BAD_REQUEST', index=7, number=8,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SERVER_ERROR', index=8, number=9,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=407,
  serialized_end=566,
)
_sym_db.RegisterEnumDescriptor(_RESPONSE_TYPE)


_FREQUENCY = _descriptor.Descriptor(
  name='Frequency',
  full_name='Frequency',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='Frequency.value', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=16,
  serialized_end=42,
)


_LASTCHANGE = _descriptor.Descriptor(
  name='LastChange',
  full_name='LastChange',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='LastChange.timestamp', index=0,
      number=2, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=44,
  serialized_end=75,
)


_IMAGEINFO = _descriptor.Descriptor(
  name='ImageInfo',
  full_name='ImageInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='extension', full_name='ImageInfo.extension', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='length', full_name='ImageInfo.length', index=1,
      number=2, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='chunk_count', full_name='ImageInfo.chunk_count', index=2,
      number=3, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=77,
  serialized_end=144,
)


_IMAGECHUNK = _descriptor.Descriptor(
  name='ImageChunk',
  full_name='ImageChunk',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='data', full_name='ImageChunk.data', index=0,
      number=1, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=146,
  serialized_end=172,
)


_INPROGRESS = _descriptor.Descriptor(
  name='InProgress',
  full_name='InProgress',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=174,
  serialized_end=186,
)


_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='Response.type', index=0,
      number=1, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='frequency', full_name='Response.frequency', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='last_change', full_name='Response.last_change', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='image_info', full_name='Response.image_info', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='image_chunk', full_name='Response.image_chunk', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='in_progress', full_name='Response.in_progress', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _RESPONSE_TYPE,
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='value', full_name='Response.value',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=189,
  serialized_end=575,
)

_RESPONSE.fields_by_name['type'].enum_type = _RESPONSE_TYPE
_RESPONSE.fields_by_name['frequency'].message_type = _FREQUENCY
_RESPONSE.fields_by_name['last_change'].message_type = _LASTCHANGE
_RESPONSE.fields_by_name['image_info'].message_type = _IMAGEINFO
_RESPONSE.fields_by_name['image_chunk'].message_type = _IMAGECHUNK
_RESPONSE.fields_by_name['in_progress'].message_type = _INPROGRESS
_RESPONSE_TYPE.containing_type = _RESPONSE
_RESPONSE.oneofs_by_name['value'].fields.append(
  _RESPONSE.fields_by_name['frequency'])
_RESPONSE.fields_by_name['frequency'].containing_oneof = _RESPONSE.oneofs_by_name['value']
_RESPONSE.oneofs_by_name['value'].fields.append(
  _RESPONSE.fields_by_name['last_change'])
_RESPONSE.fields_by_name['last_change'].containing_oneof = _RESPONSE.oneofs_by_name['value']
_RESPONSE.oneofs_by_name['value'].fields.append(
  _RESPONSE.fields_by_name['image_info'])
_RESPONSE.fields_by_name['image_info'].containing_oneof = _RESPONSE.oneofs_by_name['value']
_RESPONSE.oneofs_by_name['value'].fields.append(
  _RESPONSE.fields_by_name['image_chunk'])
_RESPONSE.fields_by_name['image_chunk'].containing_oneof = _RESPONSE.oneofs_by_name['value']
_RESPONSE.oneofs_by_name['value'].fields.append(
  _RESPONSE.fields_by_name['in_progress'])
_RESPONSE.fields_by_name['in_progress'].containing_oneof = _RESPONSE.oneofs_by_name['value']
DESCRIPTOR.message_types_by_name['Frequency'] = _FREQUENCY
DESCRIPTOR.message_types_by_name['LastChange'] = _LASTCHANGE
DESCRIPTOR.message_types_by_name['ImageInfo'] = _IMAGEINFO
DESCRIPTOR.message_types_by_name['ImageChunk'] = _IMAGECHUNK
DESCRIPTOR.message_types_by_name['InProgress'] = _INPROGRESS
DESCRIPTOR.message_types_by_name['Response'] = _RESPONSE

Frequency = _reflection.GeneratedProtocolMessageType('Frequency', (_message.Message,), dict(
  DESCRIPTOR = _FREQUENCY,
  __module__ = 'server_pb2'
  # @@protoc_insertion_point(class_scope:Frequency)
  ))
_sym_db.RegisterMessage(Frequency)

LastChange = _reflection.GeneratedProtocolMessageType('LastChange', (_message.Message,), dict(
  DESCRIPTOR = _LASTCHANGE,
  __module__ = 'server_pb2'
  # @@protoc_insertion_point(class_scope:LastChange)
  ))
_sym_db.RegisterMessage(LastChange)

ImageInfo = _reflection.GeneratedProtocolMessageType('ImageInfo', (_message.Message,), dict(
  DESCRIPTOR = _IMAGEINFO,
  __module__ = 'server_pb2'
  # @@protoc_insertion_point(class_scope:ImageInfo)
  ))
_sym_db.RegisterMessage(ImageInfo)

ImageChunk = _reflection.GeneratedProtocolMessageType('ImageChunk', (_message.Message,), dict(
  DESCRIPTOR = _IMAGECHUNK,
  __module__ = 'server_pb2'
  # @@protoc_insertion_point(class_scope:ImageChunk)
  ))
_sym_db.RegisterMessage(ImageChunk)

InProgress = _reflection.GeneratedProtocolMessageType('InProgress', (_message.Message,), dict(
  DESCRIPTOR = _INPROGRESS,
  __module__ = 'server_pb2'
  # @@protoc_insertion_point(class_scope:InProgress)
  ))
_sym_db.RegisterMessage(InProgress)

Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(
  DESCRIPTOR = _RESPONSE,
  __module__ = 'server_pb2'
  # @@protoc_insertion_point(class_scope:Response)
  ))
_sym_db.RegisterMessage(Response)


# @@protoc_insertion_point(module_scope)
