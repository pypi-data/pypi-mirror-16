---

- name: "ensure a home for {{ app_name }}"
  sudo: yes
  file: path={{ app_home }} owner={{ ansible_ssh_user }} group={{ ansible_ssh_user }} state=directory recurse=yes
  register: app_home_created

- name: "create /var/lib database location for {{ app_name }}"
  sudo: yes
  file:
    path: "/var/lib/{{ app_name }}"
    owner: "{{ ansible_ssh_user }}"
    group: "{{ ansible_ssh_user }}"
    state: directory
    recurse: yes
  sudo: yes

- name: Update apt cache
  apt:
    update_cache: yes
  sudo: yes

- name: install ssl system requirements
  sudo: yes
  apt: name={{ item }} state=present
  with_items: ssl_requirements
  when: app_use_ssl
  tags:
    - packages

- name: install system packages
  sudo: yes
  apt: name={{ item }} state=present
  with_items: system_packages
  tags:
    - packages

- name: Create a virtualenv with latest pip.
  pip: name=pip virtualenv={{ app_home }} extra_args='--upgrade'

- name: "pip+git install {{ app_name }} into virtualenv."
  pip: name='git+https://github.com/ceph/ceph-installer@{{ branch }}#egg=ceph_installer' virtualenv={{ app_home }}
  changed_when: True
  notify:
    - restart app
    - restart celery

- name: populate the database for {{ app_name }}
  command: "{{ app_home }}/bin/pecan populate {{ app_home }}/src/{{ app_name }}/config/config.py"

- name: clone ceph-ansible to {{ app_home }}
  git:
    repo: "https://github.com/ceph/ceph-ansible.git"
    dest: "{{ app_home }}/ceph-ansible"
    force: yes
    update: yes

# this isn't ideal, but it's the easiest way to get the
# latest version of ansible installed before we've packaged it
- name: pip install ansible globally
  sudo: yes
  pip:
    name: ansible
    version: 1.9.4

- include: circus.yml
  tags:
    - circus
