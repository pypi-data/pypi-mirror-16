Metadata-Version: 2.0
Name: pytablewriter
Version: 0.4.0
Summary: pytablewriter is a python library to write a table in various formats: CSV/HTML/JavaScript/JSON/Markdown/Excel/Pandas/Python/reStructuredText
Requires-Dist: DataProperty (>=0.7.0)
Requires-Dist: dominate
Requires-Dist: pathvalidate (>=0.4.2)
Requires-Dist: six
Requires-Dist: XlsxWriter

Home-page: https://github.com/thombashi/pytablewriter
Author: Tsuyoshi Hombashi
Author-email: gogogo.vm@gmail.com
License: MIT License
Description: pytablewriter
        =============
        
        .. image:: https://img.shields.io/pypi/pyversions/pytablewriter.svg
           :target: https://pypi.python.org/pypi/pytablewriter
        .. image:: https://travis-ci.org/thombashi/pytablewriter.svg?branch=master
            :target: https://travis-ci.org/thombashi/pytablewriter
        .. image:: https://ci.appveyor.com/api/projects/status/2w0611ajvw21vho5?svg=true
            :target: https://ci.appveyor.com/project/thombashi/pytablewriter
        .. image:: https://coveralls.io/repos/github/thombashi/pytablewriter/badge.svg?branch=master
            :target: https://coveralls.io/github/thombashi/pytablewriter?branch=master
        
        Summary
        -------
        
        pytablewriter is a python library to write a table in various formats: CSV/HTML/JavaScript/JSON/Markdown/Excel/Pandas/Python/reStructuredText
        
        Features
        --------
        
        - Write a table in various formats:
            - CSV
            - Microsoft Excel :superscript:`TM`
            - HTML
            - JavaScript (Definition of a nested list variable)
            - JSON
            - Markdown
            - Pandas (Definition of a DataFrame variable)
            - Python code (Definition of a nested list variable)
            - reStructuredText
                - Grid tables
                - Simple tables
                - CSV table
        - Automatic value formatting
            - Alignment
            - Padding
            - Decimal places of numbers
        - Output to a stream such as a file or the standard output
        
        Examples
        ========
        
        Write a Markdown table
        ----------------------
        
        .. code:: python
        
            import pytablewriter
        
            writer = pytablewriter.MarkdownTableWriter()
            writer.table_name = "zone"
            writer.header_list = ["zone_id", "country_code", "zone_name"]
            writer.value_matrix = [
                ["1", "AD", "Europe/Andorra"],
                ["2", "AE", "Asia/Dubai"],
                ["3", "AF", "Asia/Kabul"],
                ["4", "AG", "America/Antigua"],
                ["5", "AI", "America/Anguilla"],
            ]
        
            writer.write_table()
        
        .. code::
        
            # zone
            zone_id|country_code|   zone_name
            ------:|------------|----------------
                  1|AD          |Europe/Andorra
                  2|AE          |Asia/Dubai
                  3|AF          |Asia/Kabul
                  4|AG          |America/Antigua
                  5|AI          |America/Anguilla
        
        
        Rendering result
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        
        .. figure:: ss/markdown.png
           :scale: 80%
           :alt: markdown_ss
        
           Rendered markdown at GitHub
        
        Write a reStructuredText table (grid tables)
        --------------------------------------------
        
        
        .. code:: python
        
            import pytablewriter
        
            writer = pytablewriter.RstGridTableWriter()
            writer.table_name = "zone"
            writer.header_list = ["zone_id", "country_code", "zone_name"]
            writer.value_matrix = [
                ["1", "AD", "Europe/Andorra"],
                ["2", "AE", "Asia/Dubai"],
                ["3", "AF", "Asia/Kabul"],
                ["4", "AG", "America/Antigua"],
                ["5", "AI", "America/Anguilla"],
            ]
        
            writer.write_table()
        
        
        .. code::
        
            .. table:: zone
        
                +-------+------------+----------------+
                |zone_id|country_code|   zone_name    |
                +=======+============+================+
                |      1|AD          |Europe/Andorra  |
                +-------+------------+----------------+
                |      2|AE          |Asia/Dubai      |
                +-------+------------+----------------+
                |      3|AF          |Asia/Kabul      |
                +-------+------------+----------------+
                |      4|AG          |America/Antigua |
                +-------+------------+----------------+
                |      5|AI          |America/Anguilla|
                +-------+------------+----------------+
        
        
        Rendering result
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        
        .. table:: zone
        
            +-------+------------+----------------+
            |zone_id|country_code|   zone_name    |
            +=======+============+================+
            |      1|AD          |Europe/Andorra  |
            +-------+------------+----------------+
            |      2|AE          |Asia/Dubai      |
            +-------+------------+----------------+
            |      3|AF          |Asia/Kabul      |
            +-------+------------+----------------+
            |      4|AG          |America/Antigua |
            +-------+------------+----------------+
            |      5|AI          |America/Anguilla|
            +-------+------------+----------------+
        
        Write a JavaScript table (variable definition of nested list)
        -------------------------------------------------------------
        
        .. code:: python
        
            import pytablewriter
        
            writer = pytablewriter.JavaScriptTableWriter()
            writer.table_name = "zone"
            writer.header_list = ["zone_id", "country_code", "zone_name"]
            writer.value_matrix = [
                ["1", "AD", "Europe/Andorra"],
                ["2", "AE", "Asia/Dubai"],
                ["3", "AF", "Asia/Kabul"],
                ["4", "AG", "America/Antigua"],
                ["5", "AI", "America/Anguilla"],
            ]
        
            writer.write_table()
        
        .. code:: js
        
            var zone = [
                ["zone_id", "country_code", "zone_name"],
                [1, "AD", "Europe/Andorra"],
                [2, "AE", "Asia/Dubai"],
                [3, "AF", "Asia/Kabul"],
                [4, "AG", "America/Antigua"],
                [5, "AI", "America/Anguilla"]
            ];
        
        Write an Excel table
        --------------------
        
        .. code:: python
        
            import pytablewriter
        
            writer = pytablewriter.ExcelTableWriter()
            writer.open_workbook("sample_single.xlsx")
        
            writer.make_worksheet("zone")
            writer.header_list = ["zone_id", "country_code", "zone_name"]
            writer.value_matrix = [
                ["1", "AD", "Europe/Andorra"],
                ["2", "AE", "Asia/Dubai"],
                ["3", "AF", "Asia/Kabul"],
                ["4", "AG", "America/Antigua"],
                ["5", "AI", "America/Anguilla"],
            ]
            writer.write_table()
        
            writer.close()
        
        Output
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        
        .. figure:: ss/excel_single.png
           :scale: 100%
           :alt: excel_single
        
           Output excel file (``sample_single.xlsx``)
        
        For more information
        --------------------
        
        More examples are available at 
        http://pytablewriter.readthedocs.org/en/latest/pages/examples/index.html
        
        Installation
        ============
        
        ::
        
            pip install pytablewriter
        
        
        Dependencies
        ============
        
        Python 2.7+ or 3.3+
        
        - `DataPropery <https://github.com/thombashi/DataProperty>`__
        - `dominate <http://github.com/Knio/dominate/>`__
        - `pathvalidate <https://github.com/thombashi/pathvalidate>`__
        - `six <https://pypi.python.org/pypi/six/>`__
        - `XlsxWriter <http://xlsxwriter.readthedocs.io/>`__
        
        
        Test dependencies
        -----------------
        
        - `pytest <http://pytest.org/latest/>`__
        - `pytest-runner <https://pypi.python.org/pypi/pytest-runner>`__
        - `SimpleSQLite <https://github.com/thombashi/SimpleSQLite>`__
        - `tox <https://testrun.org/tox/latest/>`__
        
        Documentation
        =============
        
        http://pytablewriter.readthedocs.org/en/latest/
        
        
Keywords: table,CSV,JavaScript,JSON,Markdown,HTML,Pandas,reStructuredText
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX
Classifier: Operating System :: POSIX :: Linux
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: Software Development :: Libraries :: Python Modules
