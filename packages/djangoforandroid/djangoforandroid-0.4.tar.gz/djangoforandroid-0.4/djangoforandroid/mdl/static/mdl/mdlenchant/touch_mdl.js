// Generated by CoffeeScript 1.10.0
(function() {
  var MDLTouch,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  MDLTouch = (function() {
    function MDLTouch() {
      this.hide_drawer = bind(this.hide_drawer, this);
      this.swipe_drawer = bind(this.swipe_drawer, this);
      this.pand_drawer = bind(this.pand_drawer, this);
      this.start_pand_layoutdrawer = bind(this.start_pand_layoutdrawer, this);
      this.start_pand_drawer = bind(this.start_pand_drawer, this);
      this.ONSWIPE = false;
      this.ONMOVING = false;
      this.DEBUG = false;
      this.WIDTH_DRAWER = $(".mdl-layout__drawer").width() + parseInt($(".mdl-layout__drawer").css("border-right-width")) + parseInt($(".mdl-layout__drawer").css("border-left-width"));
      this.MAX_DISTANCE_DRAWER = this.WIDTH_DRAWER * 0.4;
      this.MIN_DISTANCE_DRAWER = 50;
    }

    MDLTouch.prototype.start_pand_drawer = function(event) {
      var cls;
      cls = this;
      if (event.center.x < cls.MIN_DISTANCE_DRAWER) {
        return cls.ONSWIPE = true;
      }
    };

    MDLTouch.prototype.start_pand_layoutdrawer = function(event) {
      var cls;
      cls = this;
      if ($(".mdl-layout__drawer, .mdl-layout__obfuscator").hasClass("is-visible")) {
        if (event.center.x < cls.WIDTH_DRAWER + cls.MIN_DISTANCE_DRAWER) {
          return cls.ONSWIPE = true;
        }
      }
    };

    MDLTouch.prototype.pand_drawer = function(event) {
      var X, cls;
      cls = this;
      if (cls.ONSWIPE) {
        X = event.center.x - cls.WIDTH_DRAWER;
        if (X > 0) {
          $(".mdl-layout__drawer, .mdl-layout__obfuscator").removeClass("is-visible");
          $(".mdl-layout__drawer").css({
            "-webkit-transition-duration": "0s"
          });
          return $(".mdl-layout__drawer").css({
            "-webkit-transform": "translateX(0px)"
          });
        } else {
          $(".mdl-layout__drawer, .mdl-layout__obfuscator").addClass("is-visible");
          $(".mdl-layout__drawer").css({
            "-webkit-transition-duration": "0s"
          });
          return $(".mdl-layout__drawer").css({
            "-webkit-transform": "translateX(" + X + "px)"
          });
        }
      }
    };

    MDLTouch.prototype.swipe_drawer = function(event) {
      var cls, swiperight;
      cls = this;
      swiperight = function() {
        if (cls.DEBUG) {
          console.log("Swipe drawer", cls.ONSWIPE);
        }
        if (cls.ONSWIPE && event.center.x > cls.MAX_DISTANCE_DRAWER) {
          if (cls.DEBUG) {
            console.log("Drawer visible!");
          }
          cls.ONSWIPE = false;
          $(".mdl-layout__drawer, .mdl-layout__obfuscator").addClass("is-visible");
          $(".mdl-layout__drawer").css({
            "-webkit-transition-duration": "0.2s"
          });
          return $(".mdl-layout__drawer").css({
            "-webkit-transform": "translateX(0)"
          });
        } else {
          if (cls.DEBUG) {
            console.log("Drawer no visible!");
          }
          cls.ONSWIPE = false;
          $(".mdl-layout__drawer, .mdl-layout__obfuscator").removeClass("is-visible");
          $(".mdl-layout__drawer").css({
            "-webkit-transition-duration": "0.2s"
          });
          return $(".mdl-layout__drawer").css({
            "-webkit-transform": "translateX(-" + cls.WIDTH_DRAWER + "px)"
          });
        }
      };
      return setTimeout(swiperight, 50);
    };

    MDLTouch.prototype.hide_drawer = function(event) {
      var cls, hide_;
      cls = this;
      hide_ = function() {
        $(".mdl-layout__drawer, .mdl-layout__obfuscator").removeClass("is-visible");
        $(".mdl-layout__drawer").css({
          "-webkit-transition-duration": "0s"
        });
        $(".mdl-layout__drawer").css({
          "-webkit-transform": "translateX(-" + cls.WIDTH_DRAWER + "px)"
        });
        $(".mdl-layout__drawer-button-menu").fadeIn();
        return $(".mdl-layout__drawer-button-home").fadeOut();
      };
      return setTimeout(hide_, 1);
    };

    return MDLTouch;

  })();

  $(document).ready(function() {
    var MDL_Layout, MDL_LayoutDrawer;
    MDLTouch = new MDLTouch();
    MDL_Layout = new Hammer($("body")[0]);
    MDL_Layout.get("swipe").set({
      velocity: 0,
      pointers: 1
    });
    MDL_LayoutDrawer = new Hammer($(".mdl-layout__drawer")[0]);
    MDL_LayoutDrawer.get("swipe").set({
      velocity: 0,
      pointers: 1
    });
    $(document).on("click", ".mdl-layout__obfuscator", function(event) {
      if (MDLTouch.DEBUG) {
        console.log("Click obfuscator");
      }
      $(".mdl-layout__drawer, .mdl-layout__obfuscator").removeClass("is-visible");
      return $(".mdl-layout__drawer").css({
        "-webkit-transform": "translateX(-" + MDLTouch.WIDTH_DRAWER + "px)"
      });
    });
    $(document).on("click", ".mdl-layout__drawer-button", function(event) {
      if (MDLTouch.DEBUG) {
        console.log("Click drawer button");
      }
      if ($(".mdl-layout__drawer").hasClass("is-visible")) {
        $(".mdl-layout__drawer, .mdl-layout__obfuscator").addClass("is-visible");
        return $(".mdl-layout__drawer").css({
          "-webkit-transform": "translateX(0px)"
        });
      } else {
        $(".mdl-layout__drawer, .mdl-layout__obfuscator").removeClass("is-visible");
        return $(".mdl-layout__drawer").css({
          "-webkit-transform": "translateX(-" + MDLTouch.WIDTH_DRAWER + "px)"
        });
      }
    });
    $(".mdl-layout__drawer-button-home").on("click", MDLTouch.hide_drawer);
    MDL_Layout.on("panright", MDLTouch.start_pand_drawer);
    MDL_Layout.on("panright panleft", MDLTouch.pand_drawer);
    MDL_Layout.on("swiperight swipeleft", MDLTouch.swipe_drawer);
    MDL_Layout.on("panleft", MDLTouch.start_pand_layoutdrawer);
    MDL_LayoutDrawer.on("panright panleft", MDLTouch.pand_drawer);
    return MDL_LayoutDrawer.on("swiperight swipeleft", MDLTouch.swipe_drawer);
  });

}).call(this);
