// Generated by CoffeeScript 1.10.0
(function() {
  var SliderH,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  SliderH = (function() {
    function SliderH(sliderh, parent) {
      this.start_pand = bind(this.start_pand, this);
      this.start_pand_end = bind(this.start_pand_end, this);
      this.start_pand_single = bind(this.start_pand_single, this);
      this.DIRTY = false;
      this.WIDTH_SLIDER = $(sliderh).width();
      this.WIDTH_SLIDER_THRESHOLD = this.WIDTH_SLIDER / 2;
      this.WIDTH_MAX_SLIDER = $(parent).width() - this.WIDTH_SLIDER;
    }

    SliderH.prototype.start_pand_single = function(event) {
      var cls, parent;
      cls = this;
      parent = $(event.srcEvent.path[1]);
      cls.OFFSET = parseInt(parent.css("transform").split(',')[4]);
      if (!cls.OFFSET) {
        cls.OFFSET = 0;
      }
      if (cls.OFFSET > 0) {
        cls.OFFSET = 0;
      }
      return cls.DIRTY = true;
    };

    SliderH.prototype.start_pand_end = function(event) {
      var cls, parent;
      cls = this;
      parent = $(event.srcEvent.path[1]);
      if (cls.DIRTY) {
        parent.css({
          "-webkit-transition-duration": "0.2s"
        });
        parent.css({
          "-webkit-transform": "translateX(" + cls.OFFSET + "px)"
        });
      }
      return console.log("j");
    };

    SliderH.prototype.start_pand = function(event) {
      var W, X, cls, parent;
      cls = this;
      parent = $(event.srcEvent.path[1]);
      X = cls.OFFSET + event.deltaX;
      if (cls.OFFSET === 0 && event.deltaX > 0) {
        return;
      }
      if (cls.OFFSET === -cls.WIDTH_MAX_SLIDER && event.deltaX < 0) {
        return;
      }
      parent.css({
        "-webkit-transition-duration": "0s"
      });
      parent.css({
        "-webkit-transform": "translateX(" + X + "px)"
      });
      if (event.deltaX < -cls.WIDTH_SLIDER_THRESHOLD) {
        W = cls.OFFSET - cls.WIDTH_SLIDER;
        parent.css({
          "-webkit-transition-duration": "0.2s"
        });
        parent.css({
          "-webkit-transform": "translateX(" + W + "px)"
        });
        cls.DIRTY = false;
        return;
      }
      if (event.deltaX > cls.WIDTH_SLIDER_THRESHOLD) {
        W = cls.OFFSET + cls.WIDTH_SLIDER;
        parent.css({
          "-webkit-transition-duration": "0.2s"
        });
        parent.css({
          "-webkit-transform": "translateX(" + W + "px)"
        });
        cls.DIRTY = false;
      }
    };

    return SliderH;

  })();

  $(document).ready(function() {
    var ASH_slider, SliderH_, element, i, len, ref, results;
    ref = $(".d4a-sliderh-parent");
    results = [];
    for (i = 0, len = ref.length; i < len; i++) {
      element = ref[i];
      SliderH_ = new SliderH($(element).children(".d4a-sliderh"), element);
      ASH_slider = new Hammer(element);
      ASH_slider.get("pan").set({
        velocity: 0,
        pointers: 1,
        threshold: 0
      });
      ASH_slider.on("panleft panright", SliderH_.start_pand);
      ASH_slider.on("panstart", SliderH_.start_pand_single);
      results.push(ASH_slider.on("panend", SliderH_.start_pand_end));
    }
    return results;
  });

}).call(this);
